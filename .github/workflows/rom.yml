# This is a basic workflow to help you get started with Actions

name: Assemble ROM

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths-ignore:
      - '19200 Baud (a demo)/**'
      - 'New Serial Header System!/**'
      - 'PCB/**'
      - 'SYSMON65-main/**'
      - 'basic tinkering/**'
      - 'debug/**'
      - 'images/**'
      - 'sd card contents/**'
      - 'stuff thats on loader/**'
      - 'tests/**'
      - 'the video chip/**'
      - 'vasm6502/**'
    branches: [ "main" ]
  pull_request:
    paths-ignore:
      - '19200 Baud (a demo)/**'
      - 'New Serial Header System!/**'
      - 'PCB/**'
      - 'SYSMON65-main/**'
      - 'basic tinkering/**'
      - 'debug/**'
      - 'images/**'
      - 'sd card contents/**'
      - 'stuff thats on loader/**'
      - 'tests/**'
      - 'the video chip/**'
      - 'vasm6502/**'
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: gstolarz/cc65

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      #- name: Install cc65
        #run: sudo apt-get install cc65
      
      # Assemble BASIC with ca65
      - name: Assemble BASIC with ca65
        run: |
          cd osi_basic-master
          ca65 osi_bas.s -o osi_bas.o -l a.list
          ld65 -C osi_bas.cfg osi_bas.o -o osi_bas.bin
          ca65 "osi_bas - Copy.s" -o "osi_bas - Copy.o" -l b.list
          ld65 -C "osi_bas - Copy.cfg" "osi_bas - Copy.o" -o "osi_bas - Copy.bin"
          
      # Assemble monitor with xa
      - name: Assemble XPL-monitor with xa
        run: |
          cd xa
          ./xa mon11.a65 -o xpl.BIN
          
      # Link XPL monitor with BASIC
      - name: Link XPL monitor with BASIC
        run: |
          cd xa
          cp xpl.BIN ../osi_basic-master/xpl.BIN
          cd ../osi_basic-master
          rm ROM.BIN
          cp osi_bas.bin ROM.BIN
          cat xpl.BIN >> ROM.BIN
          cd ../xa
          
      # Setup artifact folder
      - name: Setup artifact folder
        run: |
          mkdir artifacts
          cp osi_basic-master/ROM.BIN artifacts/
  
      # Publish Artifacts
      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: xpl32_rom
          path: artifacts
