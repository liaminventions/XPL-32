Sections:
00: "seg600" (600-854)
01: "seg1006" (1006-1252)


Source: "sd_handeler.s"
                        	     1: ; XPL-32 <FOLDER> type loading code
                        	     2: ; (c) 2022 Liam Oppenheimer
                        	     3: 
                        	     4: charbuffer = $601            ; 1 byte
                        	     5: seed = $01
                        	     6: donefact = $02		     ; vars
                        	     7: irqcount = $03
                        	     8: 
                        	     9: zp_sd_address = $40         ; 2 bytes
                        	    10: zp_sd_currentsector = $42   ; 4 bytes
                        	    11: zp_fat32_variables = $46    ; 24 bytes
                        	    12: 
                        	    13: fat32_workspace = $200      ; two pages
                        	    14: 
                        	    15: buffer = $400               ; 512 bytes
                        	    16: endbuf = $600
                        	    17: 
                        	    18: fat32_address           	= zp_fat32_variables + $0e  ; 2 bytes
                        	    19: 
                        	    20:   .org $0600
                        	    21: jumptoit:
00:0600 4C2506          	    22:   jmp sdstart
                        	    23: 
                        	    24:   .include "hwconfig.s"

Source: "hwconfig.s"
                        	     1: PORTB = $b000
                        	     2: PORTA = $b001
                        	     3: DDRB = $b002
                        	     4: DDRA = $b003
                        	     5: 
                        	     6: LCD_E  = %10000000
                        	     7: LCD_RW = %01000000
                        	     8: LCD_RS = %00100000
                        	     9: 
                        	    10: SD_CS   = %00010000
                        	    11: SD_SCK  = %00001000
                        	    12: SD_MOSI = %00000100
                        	    13: SD_MISO = %00000010
                        	    14: 
                        	    15: PORTA_OUTPUTPINS = LCD_E | LCD_RW | LCD_RS | SD_CS | SD_SCK | SD_MOSI
                        	    16: 
                        	    17: via_init:
00:0603 A9FF            	    18:   lda #%11111111          ; Set all pins on port B to output
00:0605 8D02B0          	    19:   sta DDRB
00:0608 A9FC            	    20:   lda #PORTA_OUTPUTPINS   ; Set various pins on port A to output
00:060A 8D03B0          	    21:   sta DDRA
00:060D 60              	    22:   rts
                        	    23: 
                        	    24: 

Source: "sd_handeler.s"
                        	    25:   .include "kernal_def.s"

Source: "kernal_def.s"
                        	     1: ; kernal def
                        	     2: 
                        	     3: acia_init = $ffa9
                        	     4: 
                        	     5: stock_via = $ffac
                        	     6: 
                        	     7: sd_init = $ffaf
                        	     8: 
                        	     9: fat32_init = $ffb2
                        	    10: 
                        	    11: print_hex_acia = $ffb5
                        	    12: 
                        	    13: crlf = $ffb8
                        	    14: 
                        	    15: cleardisplay = $ffbb
                        	    16: 
                        	    17: rxpoll = $ffbe
                        	    18: 
                        	    19: txpoll = $ffc1
                        	    20: 
                        	    21: print_chara = $ffc4
                        	    22: print_char_acia = $ffc4
                        	    23: 
                        	    24: ascii_home = $ffc7
                        	    25: 
                        	    26: w_acia_full = $ffca
                        	    27: 
                        	    28: fat32_seekcluster = $ffcd
                        	    29: 
                        	    30: fat32_readnextcluster = $ffd0
                        	    31: 
                        	    32: fat32_openroot = $ffd3
                        	    33: 
                        	    34: fat32_opendirent = $ffd6
                        	    35: 
                        	    36: fat32_readdirent = $ffd9
                        	    37: 
                        	    38: fat32_finddirent = $ffdc
                        	    39: 
                        	    40: fat32_file_readbyte = $ffdf
                        	    41: 
                        	    42: fat32_file_read = $ffe2
                        	    43: 
                        	    44: sd_readbyte = $ffe5
                        	    45: 
                        	    46: sd_sendcommand = $ffe8
                        	    47: 
                        	    48: sd_readsector = $ffeb
                        	    49: 
                        	    50: loadcmd = $ffee
                        	    51: 
                        	    52: tsave = $fff1
                        	    53: 
                        	    54: tload = $fff4
                        	    55: 

Source: "sd_handeler.s"
                        	    26: 
                        	    27: dirname:
00:060E 464F4C4445522020	    28:   .asciiz "FOLDER     "	     ; standard directory name, SHORT format
00:0616 202020
00:0619 00
                        	    29: 
                        	    30: errormsg:
00:061A 0D              	    31:   .byte $0d, $0a, "ERROR!", $0d, $0a, $00	; error msg
00:061B 0A
00:061C 4552524F5221
00:0622 0D
00:0623 0A
00:0624 00
                        	    32: 
                        	    33: sdstart:
00:0625 6400            	    34:   stz $00		; 0
                        	    35: 
00:0627 A955            	    36:   lda #$55		; shftable value
00:0629 8501            	    37:   sta seed
                        	    38: 	
00:062B 20BBFF          	    39:   jsr cleardisplay	; clear display
                        	    40: 
00:062E A29A            	    41:   ldx  #<loadmsg	; title screen
00:0630 A006            	    42:   ldy  #>loadmsg
00:0632 20CAFF          	    43:   jsr  w_acia_full
                        	    44: 
00:0635 A2C7            	    45:   ldx  #<lodmm
00:0637 A006            	    46:   ldy  #>lodmm
00:0639 20CAFF          	    47:   jsr  w_acia_full
                        	    48: 
00:063C 204206          	    49:   jsr rootsetup		; setup sd card
                        	    50: 
                        	    51: findrau:
00:063F 4C6606          	    52:   jmp type		; start "type" program
                        	    53: 
                        	    54: rootsetup:		; setup <ROOT>
00:0642 48              	    55:   pha
00:0643 DA              	    56:   phx
00:0644 5A              	    57:   phy
                        	    58: 
                        	    59:   ; Open root directory
00:0645 20D3FF          	    60:   jsr fat32_openroot
                        	    61: 
                        	    62:   ; Find the subdirectory by name
00:0648 A20E            	    63:   ldx #<dirname
00:064A A006            	    64:   ldy #>dirname
00:064C 20DCFF          	    65:   jsr fat32_finddirent
00:064F 900E            	    66:   bcc foundsubdir
                        	    67: 
                        	    68: error:
                        	    69: 
                        	    70:   ; Subdirectory not found
00:0651 A006            	    71:   ldy #>errormsg
00:0653 A21A            	    72:   ldx #<errormsg
00:0655 20CAFF          	    73:   jsr w_acia_full
00:0658 200308          	    74:   jsr error_sound
00:065B 60              	    75:   rts
00:065C 60              	    76:   rts
00:065D 60              	    77:   rts
00:065E 60              	    78:   rts
                        	    79: 
                        	    80: foundsubdir
                        	    81: 
                        	    82:   ; Open subdirectory
00:065F 20D6FF          	    83:   jsr fat32_opendirent	; open folder
                        	    84: 
00:0662 7A              	    85:   ply
00:0663 FA              	    86:   plx 
00:0664 68              	    87:   pla
00:0665 60              	    88:   rts
                        	    89: 
                        	    90: 
                        	    91: type:			; typing a filename
00:0666 A2F6            	    92:   ldx #<typemsg		; Filename:_
00:0668 A006            	    93:   ldy #>typemsg
00:066A 20CAFF          	    94:   jsr w_acia_full
00:066D A200            	    95:   ldx #0
00:066F A920            	    96:   lda #' '
00:0671 8504            	    97:   sta $04		; I frogor
00:0673 4CAA07          	    98:   jmp typeloop		; start loop
                        	    99: 
                        	   100: rxpol:
00:0676 AD0180          	   101:   lda $8001
00:0679 2908            	   102:   and #$08		; non-irq rx polling code
00:067B F0F9            	   103:   beq rxpol
00:067D 60              	   104:   rts
                        	   105: 
                        	   106: rxput:
00:067E AD0180          	   107:   lda $8001
00:0681 2908            	   108:   and #$08		; it loops
00:0683 F001            	   109:   beq typelop
00:0685 60              	   110:   rts
                        	   111: typelop:
00:0686 4CAA07          	   112:   jmp typeloop
                        	   113: 
                        	   114: lodmsg:
00:0689 0D              	   115:   .byte $0d, $0a, "Loading...", $0d, $0a, $00
00:068A 0A
00:068B 4C6F6164696E672E
00:0693 2E2E
00:0695 0D
00:0696 0A
00:0697 00
                        	   116: donemsg:
00:0698 0C              	   117:   .byte $0c, $00
00:0699 00
                        	   118: 
                        	   119: loadmsg:
00:069A 2020202020202020	   120:   .byte "          -------- SD Loader --------     ", $0d, $0a, $00
00:06A2 20202D2D2D2D2D2D
00:06AA 2D2D205344204C6F
00:06B2 61646572202D2D2D
00:06BA 2D2D2D2D2D202020
00:06C2 2020
00:06C4 0D
00:06C5 0A
00:06C6 00
                        	   121: lodmm:
00:06C7 2020202020202020	   122:   .byte "          Press (l) to list <FOLDER>      ", $0d, $0a, $0d, $0a, $00
00:06CF 2020507265737320
00:06D7 286C2920746F206C
00:06DF 697374203C464F4C
00:06E7 4445523E20202020
00:06EF 2020
00:06F1 0D
00:06F2 0A
00:06F3 0D
00:06F4 0A
00:06F5 00
                        	   123: 
                        	   124: typemsg:
00:06F6 5479706520746865	   125:   .byte "Type the filename in all caps.", $0d, $0a, "The filename is up to 8 characters long.", $0d, $0a, " Filename: "
00:06FE 2066696C656E616D
00:0706 6520696E20616C6C
00:070E 20636170732E
00:0714 0D
00:0715 0A
00:0716 5468652066696C65
00:071E 6E616D6520697320
00:0726 757020746F203820
00:072E 6368617261637465
00:0736 7273206C6F6E672E
00:073E 0D
00:073F 0A
00:0740 2046696C656E616D
00:0748 653A20
00:074B 02
00:074C 5F
00:074D 00
                        	   126: 
                        	   127: loadbuf:
00:074E 20              	   128:   .byte $20, $20, $20, $20, $20, $20, $20, $20
00:074F 20
00:0750 20
00:0751 20
00:0752 20
00:0753 20
00:0754 20
00:0755 20
00:0756 58504C          	   129:   .byte "XPL"
                        	   130: 
                        	   131: other:
00:0759 20C1FF          	   132:   jsr txpoll		; Write a letter of the filename currently being read
00:075C B140            	   133:   lda (zp_sd_address),y
00:075E 8D0080          	   134:   sta $8000
00:0761 C8              	   135:   iny
00:0762 60              	   136:   rts
                        	   137: 
                        	   138: list:			; list file dir
00:0763 20D9FF          	   139:   jsr fat32_readdirent	; files?
00:0766 B036            	   140:   bcs nofiles
00:0768 2940            	   141:   and #$40
00:076A F005            	   142:   beq arc
                        	   143: dir:
00:076C A944            	   144:   lda #'D'		; directorys show up as 
00:076E 4C7307          	   145:   jmp ebut		; D YOURFILENAME     D TEST      D FOLDER  ...Etc
                        	   146: arc:
00:0771 A946            	   147:   lda #'F'		; files show up as
                        	   148: ebut:			; F TEST.XPL         F MUSIC.XPL        F FILE.BIN  ...Etc
00:0773 20C4FF          	   149:   jsr print_chara	; f or d
00:0776 A920            	   150:   lda #$20		; space
00:0778 20C4FF          	   151:   jsr print_chara
                        	   152:   ; At this point, we know that there are no files, files, or a suddir
                        	   153:   ; Now for the name
00:077B A000            	   154:   ldy #0
                        	   155: nameloop:
00:077D C008            	   156:   cpy #8
00:077F F006            	   157:   beq dot
00:0781 205907          	   158:   jsr other
00:0784 4C7D07          	   159:   jmp nameloop
                        	   160: dot:
00:0787 A92E            	   161:   lda #'.'		; shows a file extention
00:0789 20C4FF          	   162:   jsr print_chara
                        	   163: lopii:
00:078C C00B            	   164:   cpy #11
00:078E F006            	   165:   beq endthat		; print 3-letter file extention
00:0790 205907          	   166:   jsr other
00:0793 4C8C07          	   167:   jmp lopii
                        	   168: endthat:
00:0796 A909            	   169:   lda #$09 ; Tab
00:0798 20C4FF          	   170:   jsr print_chara	; tab
00:079B 4C6307          	   171:   jmp list ; go again	; next file if there are any left
                        	   172: nofiles:		; if not,
                        	   173: endlist:		; exit listing code
00:079E 20B8FF          	   174:   jsr crlf
00:07A1 4C6606          	   175:   jmp type
                        	   176: 
                        	   177: jumptolist:
00:07A4 20B8FF          	   178:   jsr crlf
00:07A7 4C6307          	   179:   jmp list
                        	   180: 
                        	   181: typeloop:		; loop to type filenames
                        	   182: 
00:07AA 207606          	   183:   jsr rxpol		; read a charactor
00:07AD AD0080          	   184:   lda $8000
00:07B0 8D0106          	   185:   sta charbuffer
                        	   186: 
00:07B3 C90D            	   187:   cmp #$0d		; enter?
00:07B5 F017            	   188:   beq exitloop		; if so, load
                        	   189: 			; if not...
00:07B7 AD0106          	   190:   lda charbuffer	
00:07BA C96C            	   191:   cmp #'l'		; check if it's "l"
00:07BC F0E6            	   192:   beq jumptolist	; if so, list files
                        	   193: 			; if not,
00:07BE AD0106          	   194:   lda charbuffer	; echo back
00:07C1 8D0080          	   195:   sta $8000
                        	   196: 
00:07C4 AD0106          	   197:   lda charbuffer	; and store it in the filename buffer
00:07C7 9D4E07          	   198:   sta loadbuf,x
00:07CA E8              	   199:   inx
00:07CB 4CAA07          	   200:   jmp typeloop
                        	   201: 
                        	   202: exitloop:
                        	   203: 
00:07CE 20B8FF          	   204:   jsr crlf
00:07D1 204206          	   205:   jsr rootsetup
                        	   206:   
00:07D4 A007            	   207:   ldy #>loadbuf
00:07D6 A24E            	   208:   ldx #<loadbuf
00:07D8 20DCFF          	   209:   jsr fat32_finddirent
00:07DB 9003            	   210:   bcc foundfile
                        	   211:   
                        	   212:   ; File not found
00:07DD 4C5106          	   213:   jmp error
                        	   214: 
                        	   215: foundfile
                        	   216:  
                        	   217:   ; Open file
00:07E0 20D6FF          	   218:   jsr fat32_opendirent
                        	   219: 
00:07E3 A289            	   220:   ldx #<lodmsg
00:07E5 A006            	   221:   ldy #>lodmsg
00:07E7 20CAFF          	   222:   jsr w_acia_full
                        	   223: 
00:07EA A900            	   224:   lda #$00
00:07EC 8554            	   225:   sta fat32_address
00:07EE A90F            	   226:   lda #$0f
00:07F0 8555            	   227:   sta fat32_address+1
                        	   228: 
00:07F2 20E2FF          	   229:   jsr fat32_file_read  ; Yes. It is finally time to read the file.
                        	   230: 
                        	   231: end:
00:07F5 A298            	   232:   ldx #<donemsg
00:07F7 A006            	   233:   ldy #>donemsg
00:07F9 20CAFF          	   234:   jsr w_acia_full
00:07FC 20000F          	   235:   jsr $0f00
00:07FF 60              	   236:   rts
00:0800 60              	   237:   rts
00:0801 60              	   238:   rts
00:0802 60              	   239:   rts
                        	   240: 
                        	   241: ;clear_sid
                        	   242: ;  ldx #$18
                        	   243: ;csid
                        	   244: ;  stz $b800,x
                        	   245: ;  dex
                        	   246: ;  bne csid
                        	   247: ;  rts
                        	   248: 
                        	   249:   .include "errors.s"

Source: "errors.s"
                        	     1: error_sound:
00:0803 A955            	     2:   lda #$55
00:0805 8502            	     3:   sta donefact
00:0807 6403            	     4:   stz irqcount	; reset irq count
                        	     5: 
                        	     6: runthesound:
00:0809 78              	     7:   sei		; turn off irqs
00:080A A927            	     8:   lda #<irq
00:080C 8DFE7F          	     9:   sta $7ffe
00:080F A908            	    10:   lda #>irq
00:0811 8DFF7F          	    11:   sta $7fff	; store vectors
00:0814 A9C0            	    12:   lda #$c0
00:0816 8D0EB0          	    13:   sta $b00e	
00:0819 A900            	    14:   lda #0 ; Song Number
00:081B 204E08          	    15:   jsr InitSid
00:081E A940            	    16:   lda #$40
00:0820 8D0DB0          	    17:   sta $b00d
00:0823 58              	    18:   cli
00:0824 4C2F12          	    19:   jmp startupsoundloop
                        	    20: 
                        	    21: irq:
00:0827 A940            	    22:   lda #$40
00:0829 8D0DB0          	    23:   sta $b00d
00:082C 203D08          	    24:   jsr putbut		; refresh timers
00:082F E603            	    25:   inc irqcount		; a irq has occurred
00:0831 A503            	    26:   lda irqcount
00:0833 C940            	    27:   cmp #$40		; if $32 irqs (end of the error sound)
00:0835 D002            	    28:   bne continue24542 	; end the stream
00:0837 6402            	    29:   stz donefact		; its done, tell the loop
                        	    30: continue24542:
00:0839 200610          	    31:   jsr $1006
00:083C 40              	    32:   rti			; exit
                        	    33: 
                        	    34: putbut:
00:083D A29E            	    35: 		ldx #$9e
00:083F 8E04B0          	    36: 		stx $b004
00:0842 8E06B0          	    37: 		stx $b006
00:0845 A20F            	    38: 		ldx #$0f  ; 250Hz IRQ
00:0847 8E05B0          	    39: 		stx $b005
00:084A 8E07B0          	    40: 		stx $b007
00:084D 60              	    41: 		rts
00:084E 203D08          	    42: InitSid		jsr putbut
00:0851 4C0311          	    43: 		jmp $1103
                        	    44: 
                        	    45:   .org $1006
                        	    46: 
                        	    47:   .include "errorsound.s"

Source: "errorsound.s"
                        	     1: d400_sVoc1FreqLo = $b800
                        	     2: d404_sVoc1Control = $b804
                        	     3: d40b_sVoc2Control = $b80b
                        	     4: d412_sVoc3Control = $b812
                        	     5: 
                        	     6:   .org $1006
                        	     7: 
01:1006 A218            	     8: PlaySid             ldx #$18
01:1008 B504            	     9: L1008               lda $04,x
01:100A 9D00B8          	    10:                     sta d400_sVoc1FreqLo,x
01:100D CA              	    11:                     dex
01:100E 10F8            	    12:                     bpl L1008
01:1010 C602            	    13:                     dec $02
01:1012 3001            	    14:                     bmi L1015
01:1014 60              	    15:                     rts
                        	    16:                     
01:1015 8602            	    17: L1015               stx $02
01:1017 A503            	    18:                     lda $03
01:1019 D018            	    19:                     bne L1033
01:101B 201F00          	    20:                     jsr $001f
01:101E F018            	    21:                     beq L1038
01:1020 C9A0            	    22:                     cmp #$a0
01:1022 B00A            	    23:                     bcs L102e
01:1024 852A            	    24:                     sta $2a
01:1026 201F00          	    25:                     jsr $001f
01:1029 8529            	    26:                     sta $29
01:102B 4C7610          	    27:                     jmp L1076
                        	    28:                     
01:102E 38              	    29: L102e               sec
01:102F E99F            	    30:                     sbc #$9f
01:1031 8503            	    31:                     sta $03
01:1033 C603            	    32: L1033               dec $03
01:1035 4C7610          	    33:                     jmp L1076
                        	    34:                     
01:1038 201F00          	    35: L1038               jsr $001f
01:103B C9FD            	    36:                     cmp #$fd
01:103D F02C            	    37:                     beq L106b
01:103F C9FE            	    38:                     cmp #$fe
01:1041 F01D            	    39:                     beq L1060
01:1043 C9FF            	    40:                     cmp #$ff
01:1045 F003            	    41:                     beq L104a
01:1047 8502            	    42:                     sta $02
01:1049 60              	    43:                     rts
                        	    44:                     
01:104A A900            	    45: L104a               lda #$00
01:104C 8D04B8          	    46:                     sta d404_sVoc1Control
01:104F 8D0BB8          	    47:                     sta d40b_sVoc2Control
01:1052 8D12B8          	    48:                     sta d412_sVoc3Control
01:1055 A95E            	    49:                     lda #$5e
01:1057 8526            	    50:                     sta $26
01:1059 A910            	    51:                     lda #$10
01:105B 8527            	    52:                     sta $27
01:105D 60              	    53:                     rts
                        	    54:                     
01:105E FF              	    55:                       .byte $ff, $00 
01:105F 00
01:1060 A51D            	    56: L1060               lda $1d
01:1062 8526            	    57:                     sta $26
01:1064 A51E            	    58:                     lda $1e
01:1066 8527            	    59:                     sta $27
01:1068 4C1510          	    60:                     jmp L1015
                        	    61:                     
01:106B A526            	    62: L106b               lda $26
01:106D 851D            	    63:                     sta $1d
01:106F A527            	    64:                     lda $27
01:1071 851E            	    65:                     sta $1e
01:1073 4C1510          	    66:                     jmp L1015
                        	    67:                     
01:1076 20A110          	    68: L1076               jsr S10a1
01:1079 A9F8            	    69:                     lda #$f8
01:107B 18              	    70: L107b               clc
01:107C 6907            	    71:                     adc #$07
01:107E 48              	    72:                     pha
01:107F AA              	    73:                     tax
01:1080 201F00          	    74:                     jsr $001f
01:1083 4A              	    75:                     lsr a
01:1084 08              	    76:                     php
01:1085 E8              	    77: L1085               inx
01:1086 4A              	    78:                     lsr a
01:1087 B00A            	    79:                     bcs L1093
01:1089 D0FA            	    80:                     bne L1085
01:108B 28              	    81:                     plp
01:108C 68              	    82:                     pla
01:108D B0EC            	    83:                     bcs L107b
01:108F 20A110          	    84:                     jsr S10a1
01:1092 60              	    85:                     rts
                        	    86:                     
01:1093 48              	    87: L1093               pha
01:1094 BCFFFF          	    88:                     ldy $ffff,x
01:1097 201F00          	    89:                     jsr $001f
01:109A 990400          	    90:                     sta $0004,y
01:109D 68              	    91:                     pla
01:109E 4C8510          	    92:                     jmp L1085
                        	    93:                     
01:10A1 A426            	    94: S10a1               ldy $26
01:10A3 A629            	    95:                     ldx $29
01:10A5 8429            	    96:                     sty $29
01:10A7 8626            	    97:                     stx $26
01:10A9 A427            	    98:                     ldy $27
01:10AB A62A            	    99:                     ldx $2a
01:10AD 842A            	   100:                     sty $2a
01:10AF 8627            	   101:                     stx $27
01:10B1 60              	   102:                     rts
                        	   103:                     
01:10B2 8426            	   104: L10b2               sty $26
01:10B4 8627            	   105:                     stx $27
01:10B6 A206            	   106:                     ldx #$06
01:10B8 BDC610          	   107: L10b8               lda $10c6,x
01:10BB 951F            	   108:                     sta $1f,x
01:10BD CA              	   109:                     dex
01:10BE 10F8            	   110:                     bpl L10b8
01:10C0 A960            	   111:                     lda #$60
01:10C2 8528            	   112:                     sta $28
01:10C4 D00A            	   113:                     bne L10d0
01:10C6 E626            	   114:                     inc $26
01:10C8 D002            	   115:                     bne L10cc
01:10CA E627            	   116:                     inc $27
01:10CC ADFFFF          	   117: L10cc               lda $ffff
01:10CF 60              	   118:                     rts
                        	   119:                     
01:10D0 201F00          	   120: L10d0               jsr $001f
01:10D3 8D04DC          	   121:                     sta $dc04
01:10D6 201F00          	   122:                     jsr $001f
01:10D9 8D05DC          	   123:                     sta $dc05
01:10DC 201F00          	   124:                     jsr $001f
01:10DF 8529            	   125:                     sta $29
01:10E1 201F00          	   126:                     jsr $001f
01:10E4 852A            	   127:                     sta $2a
01:10E6 E626            	   128:                     inc $26
01:10E8 D002            	   129:                     bne L10ec
01:10EA E627            	   130:                     inc $27
01:10EC A526            	   131: L10ec               lda $26
01:10EE 8D9510          	   132:                     sta $1095
01:10F1 A527            	   133:                     lda $27
01:10F3 8D9610          	   134:                     sta $1096
01:10F6 A21C            	   135:                     ldx #$1c
01:10F8 A900            	   136:                     lda #$00
01:10FA 9502            	   137: L10fa               sta $02,x
01:10FC CA              	   138:                     dex
01:10FD 10FB            	   139:                     bpl L10fa
01:10FF 20A110          	   140:                     jsr S10a1
01:1102 60              	   141:                     rts
                        	   142:                     
01:1103 A009            	   143: InitSid2            ldy #$09
01:1105 A211            	   144:                     ldx #$11
01:1107 4CB210          	   145:                     jmp L10b2
                        	   146: 
01:110A F00F77110100120D	   147:   .binary "errorsound.bin"
01:1112 04050B1408090706
01:111A 0C030E0F10111713
01:1122 0A1516180200B600
01:112A 6EB60116FF3E0320
01:1132 F0410820FFF000FD
01:113A 00000007FF0000FD
01:1142 070000071E00000F
01:114A FD06166E063E03FF
01:1152 166E080008000863
01:115A 0000004000FF3E03
01:1162 20F04108209FF000
01:116A FD0007BF0000FD07
01:1172 00070E00000F112D
01:117A 00FD114AA0114AA0
01:1182 114AA0114AA0114A
01:118A A0114AA0114AA011
01:1192 4AA0114AA0114AA0
01:119A 114AA0114AA0114A
01:11A2 A0114AA0114AA011
01:11AA 4AA0114AA0114AA0
01:11B2 114AA0114AA0114A
01:11BA A0114AA0114AA011
01:11C2 4AA0114AA0114AA0
01:11CA 114AA0114AA0114A
01:11D2 A0114AA0114AA011
01:11DA 4AA0114AA0114AA0
01:11E2 114AA0114AA0114A
01:11EA A0114AA0114AA011
01:11F2 4AA0114AA0114AA0
01:11FA 114AA0114AA0114A
01:1202 A0114AA0114AA011
01:120A 4AA0114AA0114AA0
01:1212 114AA0114AA0114A
01:121A A0114AA0114AA011
01:1222 4AA0114AA0114AA0
01:122A 114AA200FE
                        	   148: ;          ^^^^^^^^^^^
                        	   149: ; put your data file here.
                        	   150: 
                        	   151: 

Source: "errors.s"
                        	    48: 
                        	    49: startupsoundloop:	
01:122F A502            	    50:   lda donefact		; loop only if the sound is not done
01:1231 D0FC            	    51:   bne startupsoundloop
01:1233 9C0EB0          	    52:   stz $b00e		; if done disable irqs
01:1236 9C0DB0          	    53:   stz $b00d
01:1239 78              	    54:   sei
01:123A A5C0            	    55:   lda $c0		; clear irq vectors
01:123C 8DFF7F          	    56:   sta $7fff
01:123F 9CFE7F          	    57:   stz $7ffe
01:1242 204912          	    58:   jsr clear_sid
01:1245 60              	    59:   rts
01:1246 60              	    60:   rts
01:1247 60              	    61:   rts
01:1248 60              	    62:   rts
                        	    63: 
                        	    64: clear_sid
01:1249 A217            	    65:   ldx #$17 ; 17 cuz no pop
                        	    66: csid
01:124B 9E00B8          	    67:   stz $b800,x
01:124E CA              	    68:   dex
01:124F D0FA            	    69:   bne csid
01:1251 60              	    70:   rts
                        	    71: 
                        	    72: 
                        	    73: 

Source: "sd_handeler.s"
                        	   250: 


Symbols by name:
DDRA                             E:B003
DDRB                             E:B002
InitSid                          A:084E
InitSid2                         A:1103
L1008                            A:1008
L1015                            A:1015
L102e                            A:102E
L1033                            A:1033
L1038                            A:1038
L104a                            A:104A
L1060                            A:1060
L106b                            A:106B
L1076                            A:1076
L107b                            A:107B
L1085                            A:1085
L1093                            A:1093
L10b2                            A:10B2
L10b8                            A:10B8
L10cc                            A:10CC
L10d0                            A:10D0
L10ec                            A:10EC
L10fa                            A:10FA
LCD_E                            E:0080
LCD_RS                           E:0020
LCD_RW                           E:0040
PORTA_OUTPUTPINS                 E:00FC
PlaySid                          A:1006
S10a1                            A:10A1
SD_CS                            E:0010
SD_MOSI                          E:0004
SD_SCK                           E:0008
arc                              A:0771
charbuffer                       E:0601
clear_sid                        A:1249
cleardisplay                     E:FFBB
continue24542                    A:0839
crlf                             E:FFB8
csid                             A:124B
d400_sVoc1FreqLo                 E:B800
d404_sVoc1Control                E:B804
d40b_sVoc2Control                E:B80B
d412_sVoc3Control                E:B812
dir                              A:076C
dirname                          A:060E
donefact                         E:0002
donemsg                          A:0698
dot                              A:0787
ebut                             A:0773
end                              A:07F5
endlist                          A:079E
endthat                          A:0796
error                            A:0651
error_sound                      A:0803
errormsg                         A:061A
exitloop                         A:07CE
fat32_address                    E:0054
fat32_file_read                  E:FFE2
fat32_finddirent                 E:FFDC
fat32_opendirent                 E:FFD6
fat32_openroot                   E:FFD3
fat32_readdirent                 E:FFD9
findrau                          A:063F
foundfile                        A:07E0
foundsubdir                      A:065F
irq                              A:0827
irqcount                         E:0003
jumptoit                         A:0600
jumptolist                       A:07A4
list                             A:0763
loadbuf                          A:074E
loadmsg                          A:069A
lodmm                            A:06C7
lodmsg                           A:0689
lopii                            A:078C
nameloop                         A:077D
nofiles                          A:079E
other                            A:0759
print_chara                      E:FFC4
putbut                           A:083D
rootsetup                        A:0642
runthesound                      A:0809
rxpol                            A:0676
rxput                            A:067E
sdstart                          A:0625
seed                             E:0001
startupsoundloop                 A:122F
txpoll                           E:FFC1
type                             A:0666
typeloop                         A:07AA
typelop                          A:0686
typemsg                          A:06F6
via_init                         A:0603
w_acia_full                      E:FFCA
zp_fat32_variables               E:0046
zp_sd_address                    E:0040

Symbols by value:
0001 seed
0002 donefact
0003 irqcount
0004 SD_MOSI
0008 SD_SCK
0010 SD_CS
0020 LCD_RS
0040 LCD_RW
0040 zp_sd_address
0046 zp_fat32_variables
0054 fat32_address
0080 LCD_E
00FC PORTA_OUTPUTPINS
0600 jumptoit
0601 charbuffer
0603 via_init
060E dirname
061A errormsg
0625 sdstart
063F findrau
0642 rootsetup
0651 error
065F foundsubdir
0666 type
0676 rxpol
067E rxput
0686 typelop
0689 lodmsg
0698 donemsg
069A loadmsg
06C7 lodmm
06F6 typemsg
074E loadbuf
0759 other
0763 list
076C dir
0771 arc
0773 ebut
077D nameloop
0787 dot
078C lopii
0796 endthat
079E endlist
079E nofiles
07A4 jumptolist
07AA typeloop
07CE exitloop
07E0 foundfile
07F5 end
0803 error_sound
0809 runthesound
0827 irq
0839 continue24542
083D putbut
084E InitSid
1006 PlaySid
1008 L1008
1015 L1015
102E L102e
1033 L1033
1038 L1038
104A L104a
1060 L1060
106B L106b
1076 L1076
107B L107b
1085 L1085
1093 L1093
10A1 S10a1
10B2 L10b2
10B8 L10b8
10CC L10cc
10D0 L10d0
10EC L10ec
10FA L10fa
1103 InitSid2
122F startupsoundloop
1249 clear_sid
124B csid
B002 DDRB
B003 DDRA
B800 d400_sVoc1FreqLo
B804 d404_sVoc1Control
B80B d40b_sVoc2Control
B812 d412_sVoc3Control
FFB8 crlf
FFBB cleardisplay
FFC1 txpoll
FFC4 print_chara
FFCA w_acia_full
FFD3 fat32_openroot
FFD6 fat32_opendirent
FFD9 fat32_readdirent
FFDC fat32_finddirent
FFE2 fat32_file_read
