F00:0001       ; XPL-32 <FOLDER> type loading code
F00:0002       ; (c) 2022-2023 Waverider
F00:0003       
F00:0004       charbuffer = $601            ; 1 byte
F00:0005       seed = $01
F00:0006       donefact = $02		     ; vars
F00:0007       irqcount = $03
F00:0008       
F00:0009       zp_sd_address = $40         ; 2 bytes
F00:0010       zp_sd_currentsector = $42   ; 4 bytes
F00:0011       zp_fat32_variables = $46    ; 24 bytes
F00:0012       
F00:0013       fat32_workspace = $200      ; two pages
F00:0014       
F00:0015       buffer = $400               ; 512 bytes
F00:0016       endbuf = $600
F00:0017       
F00:0018       fat32_readbuffer = fat32_workspace
F00:0019       
F00:0020       fat32_fatstart          = zp_fat32_variables + $00  ; 4 bytes
F00:0021       fat32_datastart         = zp_fat32_variables + $04  ; 4 bytes
F00:0022       fat32_rootcluster       = zp_fat32_variables + $08  ; 4 bytes
F00:0023       fat32_sectorspercluster = zp_fat32_variables + $0c  ; 1 byte
F00:0024       fat32_pendingsectors    = zp_fat32_variables + $0d  ; 1 byte
F00:0025       fat32_address           = zp_fat32_variables + $0e  ; 2 bytes
F00:0026       fat32_nextcluster       = zp_fat32_variables + $10  ; 4 bytes
F00:0027       fat32_bytesremaining    = zp_fat32_variables + $14  ; 4 bytes 
F00:0028       
F00:0029       fat32_errorstage        = fat32_bytesremaining  ; only used during initializatio
F00:0030       fat32_filenamepointer   = fat32_bytesremaining  ; only used when searching for a file
F00:0031       
F00:0032         .org $0900
F00:0033       jumptoit:
F00:0034         jmp sdstart
               S01:00000900:  4C 25 09
F00:0035       
F00:0036         .include "hwconfig.s"
F01:0001       PORTB = $b000
F01:0002       PORTA = $b001
F01:0003       DDRB = $b002
F01:0004       DDRA = $b003
F01:0005       
F01:0006       LCD_E  = %10000000
F01:0007       LCD_RW = %01000000
F01:0008       LCD_RS = %00100000
F01:0009       
F01:0010       SD_CS   = %00010000
F01:0011       SD_SCK  = %00001000
F01:0012       SD_MOSI = %00000100
F01:0013       SD_MISO = %00000010
F01:0014       
F01:0015       PORTA_OUTPUTPINS = LCD_E | LCD_RW | LCD_RS | SD_CS | SD_SCK | SD_MOSI
F01:0016       
F01:0017       via_init:
F01:0018         lda #%11111111          ; Set all pins on port B to output
               S01:00000903:  A9 FF
F01:0019         sta DDRB
               S01:00000905:  8D 02 B0
F01:0020         lda #PORTA_OUTPUTPINS   ; Set various pins on port A to output
               S01:00000908:  A9 FC
F01:0021         sta DDRA
               S01:0000090A:  8D 03 B0
F01:0022         rts
               S01:0000090D:  60
F01:0023       
F01:0024       
F00:0037         .include "kernal_def.s"
F02:0001       ; kernal def
F02:0002       
F02:0003       acia_init = $ffac
F02:0004       
F02:0005       stock_via = $ffaf
F02:0006       
F02:0007       sd_init = $ffb2
F02:0008       
F02:0009       fat32_init = $ffb5
F02:0010       
F02:0011       print_hex_acia = $ffb8
F02:0012       
F02:0013       crlf = $ffbb
F02:0014       
F02:0015       cleardisplay = $ffbe
F02:0016       
F02:0017       rxpoll = $ffc1
F02:0018       
F02:0019       txpoll = $ffc4
F02:0020       
F02:0021       print_chara = $ffc7
F02:0022       print_char_acia = $ffc7
F02:0023       
F02:0024       ascii_home = $ffca
F02:0025       
F02:0026       w_acia_full = $ffcd
F02:0027       
F02:0028       fat32_seekcluster = $ffd0
F02:0029       
F02:0030       fat32_readnextcluster = $ffd3
F02:0031       
F02:0032       fat32_openroot = $ffd6
F02:0033       
F02:0034       fat32_opendirent = $ffd9
F02:0035       
F02:0036       fat32_readdirent = $ffdc
F02:0037       
F02:0038       fat32_finddirent = $ffdf
F02:0039       
F02:0040       fat32_file_readbyte = $ffe2
F02:0041       
F02:0042       fat32_file_read = $ffe5
F02:0043       
F02:0044       sd_readbyte = $ffe8
F02:0045       
F02:0046       sd_sendcommand = $ffeb
F02:0047       
F02:0048       sd_readsector = $ffee
F02:0049       
F02:0050       loadcmd = $fff1
F02:0051       
F02:0052       tsave = $fff4
F02:0053       
F02:0054       tload = $fff7
F02:0055       
F00:0038       
F00:0039       dirname:
F00:0040         .asciiz "FOLDER     "	     ; standard directory name, SHORT format
               S01:0000090E:  46 4F 4C 44 45 52 20 20 20 20 20
F00:0041       
F00:0042       errormsg:
F00:0043         .byte $0d, $0a, "ERROR!", $0d, $0a, $00	; error msg
               S01:0000091A:  0D
               S01:0000091B:  0A
               S01:0000091C:  45 52 52 4F 52 21
               S01:00000922:  0D
               S01:00000923:  0A
               S01:00000924:  00
F00:0044       
F00:0045       sdstart:
F00:0046         stz $00		; 0
               S01:00000925:  64 00
F00:0047       
F00:0048         lda #$55		; shftable value
               S01:00000927:  A9 55
F00:0049         sta seed
               S01:00000929:  85 01
F00:0050       	
F00:0051         jsr cleardisplay	; clear display
               S01:0000092B:  20 BE FF
F00:0052       
F00:0053         ldx  #<loadmsg	; title screen
               S01:0000092E:  A2 9A
F00:0054         ldy  #>loadmsg
               S01:00000930:  A0 09
F00:0055         jsr  w_acia_full
               S01:00000932:  20 CD FF
F00:0056       
F00:0057         ldx  #<lodmm
               S01:00000935:  A2 C7
F00:0058         ldy  #>lodmm
               S01:00000937:  A0 09
F00:0059         jsr  w_acia_full
               S01:00000939:  20 CD FF
F00:0060       
F00:0061         jsr rootsetup		; setup sd card
               S01:0000093C:  20 42 09
F00:0062       
F00:0063       findrau:
F00:0064         jmp type		; start "type" program
               S01:0000093F:  4C 66 09
F00:0065       
F00:0066       rootsetup:		; setup <ROOT>
F00:0067         pha
               S01:00000942:  48
F00:0068         phx
               S01:00000943:  DA
F00:0069         phy
               S01:00000944:  5A
F00:0070       
F00:0071         ; Open root directory
F00:0072         jsr fat32_openroot
               S01:00000945:  20 D6 FF
F00:0073       
F00:0074         ; Find the subdirectory by name
F00:0075         ldx #<dirname
               S01:00000948:  A2 0E
F00:0076         ldy #>dirname
               S01:0000094A:  A0 09
F00:0077         jsr fat32_finddirent
               S01:0000094C:  20 DF FF
F00:0078         bcc foundsubdir
               S01:0000094F:  90 0E
F00:0079       
F00:0080       error:
F00:0081       
F00:0082         ; Subdirectory not found
F00:0083         ldy #>errormsg
               S01:00000951:  A0 09
F00:0084         ldx #<errormsg
               S01:00000953:  A2 1A
F00:0085         jsr w_acia_full
               S01:00000955:  20 CD FF
F00:0086         jsr error_sound
               S01:00000958:  20 03 0B
F00:0087         rts
               S01:0000095B:  60
F00:0088         rts
               S01:0000095C:  60
F00:0089         rts
               S01:0000095D:  60
F00:0090         rts
               S01:0000095E:  60
F00:0091       
F00:0092       foundsubdir
F00:0093       
F00:0094         ; Open subdirectory
F00:0095         jsr fat32_opendirent	; open folder
               S01:0000095F:  20 D9 FF
F00:0096       
F00:0097         ply
               S01:00000962:  7A
F00:0098         plx 
               S01:00000963:  FA
F00:0099         pla
               S01:00000964:  68
F00:0100         rts
               S01:00000965:  60
F00:0101       
F00:0102       
F00:0103       type:			; typing a filename
F00:0104         ldx #<typemsg		; Filename:_
               S01:00000966:  A2 F6
F00:0105         ldy #>typemsg
               S01:00000968:  A0 09
F00:0106         jsr w_acia_full
               S01:0000096A:  20 CD FF
F00:0107         ldx #0
               S01:0000096D:  A2 00
F00:0108         lda #' '
               S01:0000096F:  A9 20
F00:0109         sta $04		; I frogor
               S01:00000971:  85 04
F00:0110         jmp typeloop		; start loop
               S01:00000973:  4C AA 0A
F00:0111       
F00:0112       rxpol:
F00:0113         lda $8001
               S01:00000976:  AD 01 80
F00:0114         and #$08		; non-irq rx polling code
               S01:00000979:  29 08
F00:0115         beq rxpol
               S01:0000097B:  F0 F9
F00:0116         rts
               S01:0000097D:  60
F00:0117       
F00:0118       rxput:
F00:0119         lda $8001
               S01:0000097E:  AD 01 80
F00:0120         and #$08		; it loops
               S01:00000981:  29 08
F00:0121         beq typelop
               S01:00000983:  F0 01
F00:0122         rts
               S01:00000985:  60
F00:0123       typelop:
F00:0124         jmp typeloop
               S01:00000986:  4C AA 0A
F00:0125       
F00:0126       lodmsg:
F00:0127         .byte $0d, $0a, "Loading...", $0d, $0a, $00
               S01:00000989:  0D
               S01:0000098A:  0A
               S01:0000098B:  4C 6F 61 64 69 6E 67 2E 2E 2E
               S01:00000995:  0D
               S01:00000996:  0A
               S01:00000997:  00
F00:0128       donemsg:
F00:0129         .byte $0c, $00
               S01:00000998:  0C
               S01:00000999:  00
F00:0130       
F00:0131       loadmsg:
F00:0132         .byte "          -------- SD Loader --------     ", $0d, $0a, $00
               S01:0000099A:  20 20 20 20 20 20 20 20 20 20 2D 2D 2D 2D 2D 2D
               S01:000009AA:  2D 2D 20 53 44 20 4C 6F 61 64 65 72 20 2D 2D 2D
               S01:000009BA:  0D
               S01:000009BB:  0A
               S01:000009BC:  00
F00:0133       lodmm:
F00:0134         .byte "          Press (l) to list <FOLDER>      ", $0d, $0a, $0d, $0a, $00
               S01:000009C7:  20 20 20 20 20 20 20 20 20 20 50 72 65 73 73 20
               S01:000009D7:  28 6C 29 20 74 6F 20 6C 69 73 74 20 3C 46 4F 4C
               S01:000009E7:  0D
               S01:000009E8:  0A
               S01:000009E9:  0D
               S01:000009EA:  0A
               S01:000009EB:  00
F00:0135       
F00:0136       typemsg:
F00:0137         .byte "Type the filename in all caps.", $0d, $0a, "The filename is up to 8 characters long.", $0d, $0a, " Filename: ",
               S01:000009F6:  54 79 70 65 20 74 68 65 20 66 69 6C 65 6E 61 6D
               S01:00000A06:  65 20 69 6E 20 61 6C 6C 20 63 61 70 73 2E
               S01:00000A14:  0D
               S01:00000A15:  0A
               S01:00000A16:  54 68 65 20 66 69 6C 65 6E 61 6D 65 20 69 73 20
               S01:00000A26:  75 70 20 74 6F 20 38 20 63 68 61 72 61 63 74 65
               S01:00000A36:  0D
               S01:00000A37:  0A
               S01:00000A38:  20 46 69 6C 65 6E 61 6D 65 3A 20
               S01:00000A43:  02
               S01:00000A44:  5F
               S01:00000A45:  00
F00:0138       
F00:0139       loadbuf:
F00:0140         .byte $20, $20, $20, $20, $20, $20, $20, $20
               S01:00000A4E:  20
               S01:00000A4F:  20
               S01:00000A50:  20
               S01:00000A51:  20
               S01:00000A52:  20
               S01:00000A53:  20
               S01:00000A54:  20
               S01:00000A55:  20
F00:0141         .byte "XPL"
               S01:00000A56:  58 50 4C
F00:0142       
F00:0143       other:
F00:0144         jsr txpoll		; Write a letter of the filename currently being read
               S01:00000A59:  20 C4 FF
F00:0145         lda (zp_sd_address),y
               S01:00000A5C:  B1 40
F00:0146         sta $8000
               S01:00000A5E:  8D 00 80
F00:0147         iny
               S01:00000A61:  C8
F00:0148         rts
               S01:00000A62:  60
F00:0149       
F00:0150       list:			; list file dir
F00:0151         jsr fat32_readdirent	; files?
               S01:00000A63:  20 DC FF
F00:0152         bcs nofiles
               S01:00000A66:  B0 36
F00:0153         and #$40
               S01:00000A68:  29 40
F00:0154         beq arc
               S01:00000A6A:  F0 05
F00:0155       dir:
F00:0156         lda #'D'		; directorys show up as 
               S01:00000A6C:  A9 44
F00:0157         jmp ebut		; D YOURFILENAME     D TEST      D FOLDER  ...Etc
               S01:00000A6E:  4C 73 0A
F00:0158       arc:
F00:0159         lda #'F'		; files show up as
               S01:00000A71:  A9 46
F00:0160       ebut:			; F TEST.XPL         F MUSIC.XPL        F FILE.BIN  ...Etc
F00:0161         jsr print_chara	; f or d
               S01:00000A73:  20 C7 FF
F00:0162         lda #$20		; space
               S01:00000A76:  A9 20
F00:0163         jsr print_chara
               S01:00000A78:  20 C7 FF
F00:0164         ; At this point, we know that there are no files, files, or a suddir
F00:0165         ; Now for the name
F00:0166         ldy #0
               S01:00000A7B:  A0 00
F00:0167       nameloop:
F00:0168         cpy #8
               S01:00000A7D:  C0 08
F00:0169         beq dot
               S01:00000A7F:  F0 06
F00:0170         jsr other
               S01:00000A81:  20 59 0A
F00:0171         jmp nameloop
               S01:00000A84:  4C 7D 0A
F00:0172       dot:
F00:0173         lda #'.'		; shows a file extention
               S01:00000A87:  A9 2E
F00:0174         jsr print_chara
               S01:00000A89:  20 C7 FF
F00:0175       lopii:
F00:0176         cpy #11
               S01:00000A8C:  C0 0B
F00:0177         beq endthat		; print 3-letter file extention
               S01:00000A8E:  F0 06
F00:0178         jsr other
               S01:00000A90:  20 59 0A
F00:0179         jmp lopii
               S01:00000A93:  4C 8C 0A
F00:0180       endthat:
F00:0181         lda #$09 ; Tab
               S01:00000A96:  A9 09
F00:0182         jsr print_chara	; tab
               S01:00000A98:  20 C7 FF
F00:0183         jmp list ; go again	; next file if there are any left
               S01:00000A9B:  4C 63 0A
F00:0184       nofiles:		; if not,
F00:0185       endlist:		; exit listing code
F00:0186         jsr crlf
               S01:00000A9E:  20 BB FF
F00:0187         jmp type
               S01:00000AA1:  4C 66 09
F00:0188       
F00:0189       jumptolist:
F00:0190         jsr crlf
               S01:00000AA4:  20 BB FF
F00:0191         jmp list
               S01:00000AA7:  4C 63 0A
F00:0192       
F00:0193       typeloop:		; loop to type filenames
F00:0194       
F00:0195         jsr rxpol		; read a charactor
               S01:00000AAA:  20 76 09
F00:0196         lda $8000
               S01:00000AAD:  AD 00 80
F00:0197         sta charbuffer
               S01:00000AB0:  8D 01 06
F00:0198       
F00:0199         cmp #$0d		; enter?
               S01:00000AB3:  C9 0D
F00:0200         beq exitloop		; if so, load
               S01:00000AB5:  F0 17
F00:0201       			; if not...
F00:0202         lda charbuffer	
               S01:00000AB7:  AD 01 06
F00:0203         cmp #'l'		; check if it's "l"
               S01:00000ABA:  C9 6C
F00:0204         beq jumptolist	; if so, list files
               S01:00000ABC:  F0 E6
F00:0205       			; if not,
F00:0206         lda charbuffer	; echo back
               S01:00000ABE:  AD 01 06
F00:0207         sta $8000
               S01:00000AC1:  8D 00 80
F00:0208       
F00:0209         lda charbuffer	; and store it in the filename buffer
               S01:00000AC4:  AD 01 06
F00:0210         sta loadbuf,x
               S01:00000AC7:  9D 4E 0A
F00:0211         inx
               S01:00000ACA:  E8
F00:0212         jmp typeloop
               S01:00000ACB:  4C AA 0A
F00:0213       
F00:0214       exitloop:
F00:0215       
F00:0216         jsr crlf
               S01:00000ACE:  20 BB FF
F00:0217         jsr rootsetup
               S01:00000AD1:  20 42 09
F00:0218         
F00:0219         ldy #>loadbuf
               S01:00000AD4:  A0 0A
F00:0220         ldx #<loadbuf
               S01:00000AD6:  A2 4E
F00:0221         jsr fat32_finddirent
               S01:00000AD8:  20 DF FF
F00:0222         bcc foundfile
               S01:00000ADB:  90 03
F00:0223         
F00:0224         ; File not found
F00:0225         jmp error
               S01:00000ADD:  4C 51 09
F00:0226       
F00:0227       foundfile
F00:0228        
F00:0229         ; Open file
F00:0230         jsr fat32_opendirent
               S01:00000AE0:  20 D9 FF
F00:0231       
F00:0232         ldx #<lodmsg
               S01:00000AE3:  A2 89
F00:0233         ldy #>lodmsg
               S01:00000AE5:  A0 09
F00:0234         jsr w_acia_full
               S01:00000AE7:  20 CD FF
F00:0235       
F00:0236         lda #$00
               S01:00000AEA:  A9 00
F00:0237         sta fat32_address
               S01:00000AEC:  85 54
F00:0238         lda #$0f
               S01:00000AEE:  A9 0F
F00:0239         sta fat32_address+1
               S01:00000AF0:  85 55
F00:0240       
F00:0241         jsr fat32_file_read  ; Yes. It is finally time to read the file.
               S01:00000AF2:  20 E5 FF
F00:0242       
F00:0243       end:
F00:0244         ldx #<donemsg
               S01:00000AF5:  A2 98
F00:0245         ldy #>donemsg
               S01:00000AF7:  A0 09
F00:0246         jsr w_acia_full
               S01:00000AF9:  20 CD FF
F00:0247         jsr $0f00
               S01:00000AFC:  20 00 0F
F00:0248         rts
               S01:00000AFF:  60
F00:0249         rts
               S01:00000B00:  60
F00:0250         rts
               S01:00000B01:  60
F00:0251         rts
               S01:00000B02:  60
F00:0252       
F00:0253       ;clear_sid
F00:0254       ;  ldx #$18
F00:0255       ;csid
F00:0256       ;  stz $b800,x
F00:0257       ;  dex
F00:0258       ;  bne csid
F00:0259       ;  rts
F00:0260       
F00:0261         .include "errors.s"
F03:0001       error_sound:
F03:0002         lda #$55
               S01:00000B03:  A9 55
F03:0003         sta donefact
               S01:00000B05:  85 02
F03:0004         stz irqcount	; reset irq count
               S01:00000B07:  64 03
F03:0005       
F03:0006       runthesound:
F03:0007         sei		; turn off irqs
               S01:00000B09:  78
F03:0008         lda #<irq
               S01:00000B0A:  A9 27
F03:0009         sta $7ffe
               S01:00000B0C:  8D FE 7F
F03:0010         lda #>irq
               S01:00000B0F:  A9 0B
F03:0011         sta $7fff	; store vectors
               S01:00000B11:  8D FF 7F
F03:0012         lda #$c0
               S01:00000B14:  A9 C0
F03:0013         sta $b00e	
               S01:00000B16:  8D 0E B0
F03:0014         lda #0 ; Song Number
               S01:00000B19:  A9 00
F03:0015         jsr InitSid
               S01:00000B1B:  20 4E 0B
F03:0016         lda #$40
               S01:00000B1E:  A9 40
F03:0017         sta $b00d
               S01:00000B20:  8D 0D B0
F03:0018         cli
               S01:00000B23:  58
F03:0019         jmp startupsoundloop
               S01:00000B24:  4C 2F 12
F03:0020       
F03:0021       irq:
F03:0022         lda #$40
               S01:00000B27:  A9 40
F03:0023         sta $b00d
               S01:00000B29:  8D 0D B0
F03:0024         jsr putbut		; refresh timers
               S01:00000B2C:  20 3D 0B
F03:0025         inc irqcount		; a irq has occurred
               S01:00000B2F:  E6 03
F03:0026         lda irqcount
               S01:00000B31:  A5 03
F03:0027         cmp #$40		; if $32 irqs (end of the error sound)
               S01:00000B33:  C9 40
F03:0028         bne continue24542 	; end the stream
               S01:00000B35:  D0 02
F03:0029         stz donefact		; its done, tell the loop
               S01:00000B37:  64 02
F03:0030       continue24542:
F03:0031         jsr $1006
               S01:00000B39:  20 06 10
F03:0032         rti			; exit
               S01:00000B3C:  40
F03:0033       
F03:0034       putbut:
F03:0035         ldx #$9e
               S01:00000B3D:  A2 9E
F03:0036         stx $b004
               S01:00000B3F:  8E 04 B0
F03:0037         stx $b006
               S01:00000B42:  8E 06 B0
F03:0038         ldx #$0f  ; 250Hz IRQ
               S01:00000B45:  A2 0F
F03:0039         stx $b005
               S01:00000B47:  8E 05 B0
F03:0040         stx $b007
               S01:00000B4A:  8E 07 B0
F03:0041         rts
               S01:00000B4D:  60
F03:0042       InitSid:
F03:0043         jsr putbut
               S01:00000B4E:  20 3D 0B
F03:0044         jmp $1103
               S01:00000B51:  4C 03 11
F03:0045       
F03:0046         .org $1006
F03:0047       
F03:0048         .include "errorsound.s"
F04:0001       d400_sVoc1FreqLo = $b800
F04:0002       d404_sVoc1Control = $b804
F04:0003       d40b_sVoc2Control = $b80b
F04:0004       d412_sVoc3Control = $b812
F04:0005       
F04:0006         .org $1006
F04:0007       
F04:0008       PlaySid             ldx #$18
               S02:00001006:  A2 18
F04:0009       L1008               lda $04,x
               S02:00001008:  B5 04
F04:0010                           sta d400_sVoc1FreqLo,x
               S02:0000100A:  9D 00 B8
F04:0011                           dex
               S02:0000100D:  CA
F04:0012                           bpl L1008
               S02:0000100E:  10 F8
F04:0013                           dec $02
               S02:00001010:  C6 02
F04:0014                           bmi L1015
               S02:00001012:  30 01
F04:0015                           rts
               S02:00001014:  60
F04:0016                           
F04:0017       L1015               stx $02
               S02:00001015:  86 02
F04:0018                           lda $03
               S02:00001017:  A5 03
F04:0019                           bne L1033
               S02:00001019:  D0 18
F04:0020                           jsr $001f
               S02:0000101B:  20 1F 00
F04:0021                           beq L1038
               S02:0000101E:  F0 18
F04:0022                           cmp #$a0
               S02:00001020:  C9 A0
F04:0023                           bcs L102e
               S02:00001022:  B0 0A
F04:0024                           sta $2a
               S02:00001024:  85 2A
F04:0025                           jsr $001f
               S02:00001026:  20 1F 00
F04:0026                           sta $29
               S02:00001029:  85 29
F04:0027                           jmp L1076
               S02:0000102B:  4C 76 10
F04:0028                           
F04:0029       L102e               sec
               S02:0000102E:  38
F04:0030                           sbc #$9f
               S02:0000102F:  E9 9F
F04:0031                           sta $03
               S02:00001031:  85 03
F04:0032       L1033               dec $03
               S02:00001033:  C6 03
F04:0033                           jmp L1076
               S02:00001035:  4C 76 10
F04:0034                           
F04:0035       L1038               jsr $001f
               S02:00001038:  20 1F 00
F04:0036                           cmp #$fd
               S02:0000103B:  C9 FD
F04:0037                           beq L106b
               S02:0000103D:  F0 2C
F04:0038                           cmp #$fe
               S02:0000103F:  C9 FE
F04:0039                           beq L1060
               S02:00001041:  F0 1D
F04:0040                           cmp #$ff
               S02:00001043:  C9 FF
F04:0041                           beq L104a
               S02:00001045:  F0 03
F04:0042                           sta $02
               S02:00001047:  85 02
F04:0043                           rts
               S02:00001049:  60
F04:0044                           
F04:0045       L104a               lda #$00
               S02:0000104A:  A9 00
F04:0046                           sta d404_sVoc1Control
               S02:0000104C:  8D 04 B8
F04:0047                           sta d40b_sVoc2Control
               S02:0000104F:  8D 0B B8
F04:0048                           sta d412_sVoc3Control
               S02:00001052:  8D 12 B8
F04:0049                           lda #$5e
               S02:00001055:  A9 5E
F04:0050                           sta $26
               S02:00001057:  85 26
F04:0051                           lda #$10
               S02:00001059:  A9 10
F04:0052                           sta $27
               S02:0000105B:  85 27
F04:0053                           rts
               S02:0000105D:  60
F04:0054                           
F04:0055                             .byte $ff, $00 
               S02:0000105E:  FF
               S02:0000105F:  00
F04:0056       L1060               lda $1d
               S02:00001060:  A5 1D
F04:0057                           sta $26
               S02:00001062:  85 26
F04:0058                           lda $1e
               S02:00001064:  A5 1E
F04:0059                           sta $27
               S02:00001066:  85 27
F04:0060                           jmp L1015
               S02:00001068:  4C 15 10
F04:0061                           
F04:0062       L106b               lda $26
               S02:0000106B:  A5 26
F04:0063                           sta $1d
               S02:0000106D:  85 1D
F04:0064                           lda $27
               S02:0000106F:  A5 27
F04:0065                           sta $1e
               S02:00001071:  85 1E
F04:0066                           jmp L1015
               S02:00001073:  4C 15 10
F04:0067                           
F04:0068       L1076               jsr S10a1
               S02:00001076:  20 A1 10
F04:0069                           lda #$f8
               S02:00001079:  A9 F8
F04:0070       L107b               clc
               S02:0000107B:  18
F04:0071                           adc #$07
               S02:0000107C:  69 07
F04:0072                           pha
               S02:0000107E:  48
F04:0073                           tax
               S02:0000107F:  AA
F04:0074                           jsr $001f
               S02:00001080:  20 1F 00
F04:0075                           lsr a
               S02:00001083:  4A
F04:0076                           php
               S02:00001084:  08
F04:0077       L1085               inx
               S02:00001085:  E8
F04:0078                           lsr a
               S02:00001086:  4A
F04:0079                           bcs L1093
               S02:00001087:  B0 0A
F04:0080                           bne L1085
               S02:00001089:  D0 FA
F04:0081                           plp
               S02:0000108B:  28
F04:0082                           pla
               S02:0000108C:  68
F04:0083                           bcs L107b
               S02:0000108D:  B0 EC
F04:0084                           jsr S10a1
               S02:0000108F:  20 A1 10
F04:0085                           rts
               S02:00001092:  60
F04:0086                           
F04:0087       L1093               pha
               S02:00001093:  48
F04:0088                           ldy $ffff,x
               S02:00001094:  BC FF FF
F04:0089                           jsr $001f
               S02:00001097:  20 1F 00
F04:0090                           sta $0004,y
               S02:0000109A:  99 04 00
F04:0091                           pla
               S02:0000109D:  68
F04:0092                           jmp L1085
               S02:0000109E:  4C 85 10
F04:0093                           
F04:0094       S10a1               ldy $26
               S02:000010A1:  A4 26
F04:0095                           ldx $29
               S02:000010A3:  A6 29
F04:0096                           sty $29
               S02:000010A5:  84 29
F04:0097                           stx $26
               S02:000010A7:  86 26
F04:0098                           ldy $27
               S02:000010A9:  A4 27
F04:0099                           ldx $2a
               S02:000010AB:  A6 2A
F04:0100                           sty $2a
               S02:000010AD:  84 2A
F04:0101                           stx $27
               S02:000010AF:  86 27
F04:0102                           rts
               S02:000010B1:  60
F04:0103                           
F04:0104       L10b2               sty $26
               S02:000010B2:  84 26
F04:0105                           stx $27
               S02:000010B4:  86 27
F04:0106                           ldx #$06
               S02:000010B6:  A2 06
F04:0107       L10b8               lda $10c6,x
               S02:000010B8:  BD C6 10
F04:0108                           sta $1f,x
               S02:000010BB:  95 1F
F04:0109                           dex
               S02:000010BD:  CA
F04:0110                           bpl L10b8
               S02:000010BE:  10 F8
F04:0111                           lda #$60
               S02:000010C0:  A9 60
F04:0112                           sta $28
               S02:000010C2:  85 28
F04:0113                           bne L10d0
               S02:000010C4:  D0 0A
F04:0114                           inc $26
               S02:000010C6:  E6 26
F04:0115                           bne L10cc
               S02:000010C8:  D0 02
F04:0116                           inc $27
               S02:000010CA:  E6 27
F04:0117       L10cc               lda $ffff
               S02:000010CC:  AD FF FF
F04:0118                           rts
               S02:000010CF:  60
F04:0119                           
F04:0120       L10d0               jsr $001f
               S02:000010D0:  20 1F 00
F04:0121                           sta $dc04
               S02:000010D3:  8D 04 DC
F04:0122                           jsr $001f
               S02:000010D6:  20 1F 00
F04:0123                           sta $dc05
               S02:000010D9:  8D 05 DC
F04:0124                           jsr $001f
               S02:000010DC:  20 1F 00
F04:0125                           sta $29
               S02:000010DF:  85 29
F04:0126                           jsr $001f
               S02:000010E1:  20 1F 00
F04:0127                           sta $2a
               S02:000010E4:  85 2A
F04:0128                           inc $26
               S02:000010E6:  E6 26
F04:0129                           bne L10ec
               S02:000010E8:  D0 02
F04:0130                           inc $27
               S02:000010EA:  E6 27
F04:0131       L10ec               lda $26
               S02:000010EC:  A5 26
F04:0132                           sta $1095
               S02:000010EE:  8D 95 10
F04:0133                           lda $27
               S02:000010F1:  A5 27
F04:0134                           sta $1096
               S02:000010F3:  8D 96 10
F04:0135                           ldx #$1c
               S02:000010F6:  A2 1C
F04:0136                           lda #$00
               S02:000010F8:  A9 00
F04:0137       L10fa               sta $02,x
               S02:000010FA:  95 02
F04:0138                           dex
               S02:000010FC:  CA
F04:0139                           bpl L10fa
               S02:000010FD:  10 FB
F04:0140                           jsr S10a1
               S02:000010FF:  20 A1 10
F04:0141                           rts
               S02:00001102:  60
F04:0142                           
F04:0143       InitSid2            ldy #$09
               S02:00001103:  A0 09
F04:0144                           ldx #$11
               S02:00001105:  A2 11
F04:0145                           jmp L10b2
               S02:00001107:  4C B2 10
F04:0146       
F04:0147         .binary "errorsound.bin"
               S02:0000110A:  F0 0F 77 11 01 00 12 0D 04 05 0B 14 08 09 07 06
               S02:0000111A:  0C 03 0E 0F 10 11 17 13 0A 15 16 18 02 00 B6 00
F04:0148       ;          ^^^^^^^^^^^
F04:0149       ; put your data file here.
F04:0150       
F04:0151       
F03:0049       
F03:0050       startupsoundloop:	
F03:0051         lda donefact		; loop only if the sound is not done
               S02:0000122F:  A5 02
F03:0052         bne startupsoundloop
               S02:00001231:  D0 FC
F03:0053         stz $b00e		; if done disable irqs
               S02:00001233:  9C 0E B0
F03:0054         stz $b00d
               S02:00001236:  9C 0D B0
F03:0055         sei
               S02:00001239:  78
F03:0056         lda $c0		; clear irq vectors
               S02:0000123A:  A5 C0
F03:0057         sta $7fff
               S02:0000123C:  8D FF 7F
F03:0058         stz $7ffe
               S02:0000123F:  9C FE 7F
F03:0059         jsr clear_sid
               S02:00001242:  20 49 12
F03:0060         rts
               S02:00001245:  60
F03:0061         rts
               S02:00001246:  60
F03:0062         rts
               S02:00001247:  60
F03:0063         rts
               S02:00001248:  60
F03:0064       
F03:0065       clear_sid
F03:0066         ldx #$17 ; 17 cuz no pop
               S02:00001249:  A2 17
F03:0067       csid
F03:0068         stz $b800,x
               S02:0000124B:  9E 00 B8
F03:0069         dex
               S02:0000124E:  CA
F03:0070         bne csid
               S02:0000124F:  D0 FA
F03:0071         rts
               S02:00001251:  60
F03:0072       
F03:0073       
F00:0262       


Sections:
S01  seg900
S02  seg1006


Sources:
F00  sd_handeler.s
F01  hwconfig.s
F02  kernal_def.s
F03  errors.s
F04  errorsound.s


Symbols:
csid EXPR(4683=0x124b) ABS 
clear_sid EXPR(4681=0x1249) ABS 
InitSid2 EXPR(4355=0x1103) UNUSED ABS 
L10fa EXPR(4346=0x10fa) ABS 
L10ec EXPR(4332=0x10ec) ABS 
L10cc EXPR(4300=0x10cc) ABS 
L10d0 EXPR(4304=0x10d0) ABS 
L10b8 EXPR(4280=0x10b8) ABS 
L10b2 EXPR(4274=0x10b2) ABS 
L1093 EXPR(4243=0x1093) ABS 
L1085 EXPR(4229=0x1085) ABS 
L107b EXPR(4219=0x107b) ABS 
S10a1 EXPR(4257=0x10a1) ABS 
L104a EXPR(4170=0x104a) ABS 
L1060 EXPR(4192=0x1060) ABS 
L106b EXPR(4203=0x106b) ABS 
L1076 EXPR(4214=0x1076) ABS 
L102e EXPR(4142=0x102e) ABS 
L1038 EXPR(4152=0x1038) ABS 
L1033 EXPR(4147=0x1033) ABS 
L1015 EXPR(4117=0x1015) ABS 
L1008 EXPR(4104=0x1008) ABS 
PlaySid EXPR(4102=0x1006) UNUSED ABS 
d412_sVoc3Control EXPR(47122=0xb812) EQU 
d40b_sVoc2Control EXPR(47115=0xb80b) EQU 
d404_sVoc1Control EXPR(47108=0xb804) EQU 
d400_sVoc1FreqLo EXPR(47104=0xb800) EQU 
continue24542 EXPR(2873=0xb39) ABS 
putbut EXPR(2877=0xb3d) ABS 
startupsoundloop EXPR(4655=0x122f) ABS 
InitSid EXPR(2894=0xb4e) ABS 
irq EXPR(2855=0xb27) ABS 
runthesound EXPR(2825=0xb09) UNUSED ABS 
end EXPR(2805=0xaf5) UNUSED ABS 
foundfile EXPR(2784=0xae0) ABS 
exitloop EXPR(2766=0xace) ABS 
jumptolist EXPR(2724=0xaa4) ABS 
endlist EXPR(2718=0xa9e) UNUSED ABS 
endthat EXPR(2710=0xa96) ABS 
lopii EXPR(2700=0xa8c) ABS 
dot EXPR(2695=0xa87) ABS 
nameloop EXPR(2685=0xa7d) ABS 
ebut EXPR(2675=0xa73) ABS 
dir EXPR(2668=0xa6c) UNUSED ABS 
arc EXPR(2673=0xa71) ABS 
nofiles EXPR(2718=0xa9e) ABS 
list EXPR(2659=0xa63) ABS 
other EXPR(2649=0xa59) ABS 
loadbuf EXPR(2638=0xa4e) ABS 
donemsg EXPR(2456=0x998) ABS 
lodmsg EXPR(2441=0x989) ABS 
typelop EXPR(2438=0x986) ABS 
rxput EXPR(2430=0x97e) UNUSED ABS 
rxpol EXPR(2422=0x976) ABS 
typeloop EXPR(2730=0xaaa) ABS 
typemsg EXPR(2550=0x9f6) ABS 
error_sound EXPR(2819=0xb03) ABS 
error EXPR(2385=0x951) ABS 
foundsubdir EXPR(2399=0x95f) ABS 
type EXPR(2406=0x966) ABS 
findrau EXPR(2367=0x93f) UNUSED ABS 
rootsetup EXPR(2370=0x942) ABS 
lodmm EXPR(2503=0x9c7) ABS 
loadmsg EXPR(2458=0x99a) ABS 
errormsg EXPR(2330=0x91a) ABS 
dirname EXPR(2318=0x90e) ABS 
tload EXPR(65527=0xfff7) UNUSED EQU 
tsave EXPR(65524=0xfff4) UNUSED EQU 
loadcmd EXPR(65521=0xfff1) UNUSED EQU 
sd_readsector EXPR(65518=0xffee) UNUSED EQU 
sd_sendcommand EXPR(65515=0xffeb) UNUSED EQU 
sd_readbyte EXPR(65512=0xffe8) UNUSED EQU 
fat32_file_read EXPR(65509=0xffe5) EQU 
fat32_file_readbyte EXPR(65506=0xffe2) UNUSED EQU 
fat32_finddirent EXPR(65503=0xffdf) EQU 
fat32_readdirent EXPR(65500=0xffdc) EQU 
fat32_opendirent EXPR(65497=0xffd9) EQU 
fat32_openroot EXPR(65494=0xffd6) EQU 
fat32_readnextcluster EXPR(65491=0xffd3) UNUSED EQU 
fat32_seekcluster EXPR(65488=0xffd0) UNUSED EQU 
w_acia_full EXPR(65485=0xffcd) EQU 
ascii_home EXPR(65482=0xffca) UNUSED EQU 
print_char_acia EXPR(65479=0xffc7) UNUSED EQU 
print_chara EXPR(65479=0xffc7) EQU 
txpoll EXPR(65476=0xffc4) EQU 
rxpoll EXPR(65473=0xffc1) UNUSED EQU 
cleardisplay EXPR(65470=0xffbe) EQU 
crlf EXPR(65467=0xffbb) EQU 
print_hex_acia EXPR(65464=0xffb8) UNUSED EQU 
fat32_init EXPR(65461=0xffb5) UNUSED EQU 
sd_init EXPR(65458=0xffb2) UNUSED EQU 
stock_via EXPR(65455=0xffaf) UNUSED EQU 
acia_init EXPR(65452=0xffac) UNUSED EQU 
via_init EXPR(2307=0x903) UNUSED ABS 
PORTA_OUTPUTPINS EXPR(252=0xfc) EQU 
SD_MISO EXPR(2=0x2) UNUSED EQU 
SD_MOSI EXPR(4=0x4) EQU 
SD_SCK EXPR(8=0x8) EQU 
SD_CS EXPR(16=0x10) EQU 
LCD_RS EXPR(32=0x20) EQU 
LCD_RW EXPR(64=0x40) EQU 
LCD_E EXPR(128=0x80) EQU 
DDRA EXPR(45059=0xb003) EQU 
DDRB EXPR(45058=0xb002) EQU 
PORTA EXPR(45057=0xb001) UNUSED EQU 
PORTB EXPR(45056=0xb000) UNUSED EQU 
sdstart EXPR(2341=0x925) ABS 
jumptoit EXPR(2304=0x900) UNUSED ABS 
fat32_filenamepointer EXPR(90=0x5a) UNUSED EQU 
fat32_errorstage EXPR(90=0x5a) UNUSED EQU 
fat32_bytesremaining EXPR(90=0x5a) EQU 
fat32_nextcluster EXPR(86=0x56) UNUSED EQU 
fat32_address EXPR(84=0x54) EQU 
fat32_pendingsectors EXPR(83=0x53) UNUSED EQU 
fat32_sectorspercluster EXPR(82=0x52) UNUSED EQU 
fat32_rootcluster EXPR(78=0x4e) UNUSED EQU 
fat32_datastart EXPR(74=0x4a) UNUSED EQU 
fat32_fatstart EXPR(70=0x46) UNUSED EQU 
fat32_readbuffer EXPR(512=0x200) UNUSED EQU 
endbuf EXPR(1536=0x600) UNUSED EQU 
buffer EXPR(1024=0x400) UNUSED EQU 
fat32_workspace EXPR(512=0x200) EQU 
zp_fat32_variables EXPR(70=0x46) EQU 
zp_sd_currentsector EXPR(66=0x42) UNUSED EQU 
zp_sd_address EXPR(64=0x40) EQU 
irqcount EXPR(3=0x3) EQU 
donefact EXPR(2=0x2) EQU 
seed EXPR(1=0x1) EQU 
charbuffer EXPR(1537=0x601) EQU 
__RPTCNT EXPR(-1=0xffff) INTERNAL 
__VASM EXPR(0=0x0) INTERNAL 

There have been no errors.
