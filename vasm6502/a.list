Sections:
00: "segf00" (F00-1601)


Source: "pong.s"
                        	     1: ; [PONG]
                        	     2: 
                        	     3: ; TMS9918A
                        	     4: VDP_VRAM               = $8800		; address to set MODE low for a video ram operation on the TMS9918A Video Display Proce
                        	     5: VDP_REG                = $8801		; address to set MODE high for a video register operation on the TMS9918A Video Display
                        	     6: VDP_WRITE_VRAM_BIT     = %01000000  	; pattern of second vram address write: 01AAAAAA
                        	     7: VDP_REGISTER_BITS      = %10000000  	; pattern of second register write: 10000RRR
                        	     8: 
                        	     9: VDP_RAM_START = $0000
                        	    10: VDP_PATTERN_TABLE_BASE = $0800
                        	    11: VDP_SPRITE_PATTERN_TABLE_BASE = $0000
                        	    12: VDP_COLOR_TABLE_BASE = $2000
                        	    13: VDP_NAME_TABLE_BASE = $0400
                        	    14: VDP_SPR_ATT_TABLE_BASE = $0700
                        	    15: 
                        	    16: TEXT_LOC		= VDP_NAME_TABLE_BASE+15
                        	    17: 
                        	    18: ; zero page addresses
                        	    19: VDP_PATTERN_INIT    	= $30
                        	    20: VDP_PATTERN_INIT_HI 	= $31
                        	    21: 
                        	    22: VDP_NAME_POINTER        = $32
                        	    23: 
                        	    24: fc = $34
                        	    25: 
                        	    26:   .org $0f00
                        	    27:   .macro vdp_write_vram			; macro to store address in vdp_reg for write
                        	    28:   pha
                        	    29:   lda #<(\1)
                        	    30:   sta VDP_REG
                        	    31:   lda #(VDP_WRITE_VRAM_BIT | >\1)
                        	    32:   sta VDP_REG
                        	    33:   pla
                        	    34:   .endm
                        	    35: ;;;;;;;;;;;;;;;;;;; reset ;;;;;;;;;;;;;;;;;;;
                        	    36: 
                        	    37: reset:
                        	    38: 
                        	    39: ;;;;;;;;;;;;;;;;;;; setup subroutines ;;;;;;;;;;;;;;;;;;;;;;;
                        	    40: 
00:0F00 78              	    41:   sei
                        	    42:   ; store irq location
                        	    43:   ;lda #<vdp_irq
                        	    44:   ;sta $7ffe
                        	    45:   ;lda #>vdp_irq
                        	    46:   ;sta $7fff
00:0F01 9C0EB0          	    47:   stz $b00e     ; argguahububefhia! that darn via! short circut!!1!! this is d fix
                        	    48: 
00:0F04 20A80F          	    49:   jsr vdp_set_registers
00:0F07 20310F          	    50:   jsr vdp_setup
00:0F0A A9FF            	    51:   lda #$ff	; activate display
00:0F0C 8D02B0          	    52:   sta $b002
00:0F0F 8D00B0          	    53:   sta $b000
                        	    54:   ;lda #0
                        	    55:   ;jsr InitSid
00:0F12 A910            	    56:   lda #16
00:0F14 8534            	    57:   sta fc
                        	    58:   ;cli
                        	    59: holding:
                        	    60:   ;;jsr changecolor
00:0F16 AD0188          	    61:   lda VDP_REG
00:0F19 2980            	    62:   and #$80
00:0F1B F0F9            	    63:   beq holding
                        	    64: ;  lda #$0e
                        	    65: ;  sta VDP_REG
                        	    66: ;  lda #$87
                        	    67: ;  sta VDP_REG
                        	    68: ;  jsr PlaySid
                        	    69: ;  lda #$00
                        	    70: ;  sta VDP_REG
                        	    71: ;  lda #$87
                        	    72: ;  sta VDP_REG
                        	    73:   ;jmp holding
                        	    74: ;vdp_irq:
00:0F1D AD0188          	    75:   lda VDP_REG
                        	    76:   ;and #%00100000
                        	    77:   ;bne collision
                        	    78:   ;rti
                        	    79: ;collision:
00:0F20 E634            	    80:   inc fc
00:0F22 F003            	    81:   beq col
                        	    82:   ; do nothing yet
                        	    83:   ;rti
00:0F24 4C160F          	    84:   jmp holding
                        	    85: col:
00:0F27 A910            	    86:   lda #16
00:0F29 8534            	    87:   sta fc
00:0F2B 20EC0F          	    88:   jsr changecolor
                        	    89:   ;rti
00:0F2E 4C160F          	    90:   jmp holding
                        	    91: 
                        	    92: ;;;;;;;;;;;;;;;;;;; vdp_setup subroutines ;;;;;;;;;;;;;;;;;;;;
                        	    93: 
                        	    94: vdp_setup:
00:0F31 20C00F          	    95:   jsr vdp_zapram
00:0F34 20FD0F          	    96:   jsr vdp_initialize_name_table
00:0F37 208D10          	    97:   jsr vdp_initialize_color_table
00:0F3A 202410          	    98:   jsr vdp_write_name_table
00:0F3D 205B10          	    99:   jsr vdp_initialize_pattern_table
00:0F40 204A0F          	   100:   jsr vdp_copysprites
00:0F43 206D0F          	   101:   jsr vdp_put_spr
00:0F46 20AA10          	   102:   jsr vdp_enable_display
00:0F49 60              	   103:   rts
                        	   104: 
                        	   105: vdp_copysprites:
00:0F4A 48              	   106:   pha
00:0F4B DA              	   107:   phx
                        	   108:   vdp_write_vram VDP_SPRITE_PATTERN_TABLE_BASE
00:0F4C 48              	     1M   pha
00:0F4D A900            	     2M   lda #<(VDP_SPRITE_PATTERN_TABLE_BASE)
00:0F4F 8D0188          	     3M   sta VDP_REG
00:0F52 A940            	     4M   lda #(VDP_WRITE_VRAM_BIT | >VDP_SPRITE_PATTERN_TABLE_BASE)
00:0F54 8D0188          	     5M   sta VDP_REG
00:0F57 68              	     6M   pla
00:0F58 A200            	   109:   ldx #0
                        	   110: .loop:
00:0F5A BDC810          	   111:   lda vdp_block,x
00:0F5D 8D0088          	   112:   sta VDP_VRAM
00:0F60 E8              	   113:   inx
00:0F61 E040            	   114:   cpx #64 ; also copy the ball sprite
00:0F63 D0F5            	   115:   bne .loop
00:0F65 A9D0            	   116:   lda #$d0
00:0F67 8D0088          	   117:   sta VDP_VRAM
00:0F6A FA              	   118:   plx
00:0F6B 68              	   119:   pla
00:0F6C 60              	   120:   rts
                        	   121: 
                        	   122: vdp_put_spr:
00:0F6D 48              	   123:   pha
00:0F6E DA              	   124:   phx
                        	   125:   vdp_write_vram VDP_SPR_ATT_TABLE_BASE 
00:0F6F 48              	     1M   pha
00:0F70 A900            	     2M   lda #<(VDP_SPR_ATT_TABLE_BASE )
00:0F72 8D0188          	     3M   sta VDP_REG
00:0F75 A947            	     4M   lda #(VDP_WRITE_VRAM_BIT | >VDP_SPR_ATT_TABLE_BASE )
00:0F77 8D0188          	     5M   sta VDP_REG
00:0F7A 68              	     6M   pla
00:0F7B A200            	   126:   ldx #0
                        	   127: .loop
00:0F7D BD8B0F          	   128:   lda vdp_spr,x
00:0F80 8D0088          	   129:   sta VDP_VRAM
00:0F83 E8              	   130:   inx
00:0F84 E01D            	   131:   cpx #$1d
00:0F86 D0F5            	   132:   bne .loop
00:0F88 FA              	   133:   plx 
00:0F89 68              	   134:   pla
00:0F8A 60              	   135:   rts
                        	   136: 
                        	   137: vdp_spr:
                        	   138:   ; ball
                        	   139:   ; Y=0x5f, X=0x77, NAME=4, COL=White
00:0F8B 5F              	   140:   .byte $5f,$77,$04,$0f
00:0F8C 77
00:0F8D 04
00:0F8E 0F
                        	   141:   ; left paddle
00:0F8F 6F              	   142:   .byte $6f,$00,$00,$0f
00:0F90 00
00:0F91 00
00:0F92 0F
00:0F93 5F              	   143:   .byte $5f,$00,$00,$0f
00:0F94 00
00:0F95 00
00:0F96 0F
00:0F97 4F              	   144:   .byte $4f,$00,$00,$0f
00:0F98 00
00:0F99 00
00:0F9A 0F
                        	   145:   ; right paddle
00:0F9B 6F              	   146:   .byte $6f,$f1,$00,$0f
00:0F9C F1
00:0F9D 00
00:0F9E 0F
00:0F9F 5F              	   147:   .byte $5f,$f1,$00,$0f
00:0FA0 F1
00:0FA1 00
00:0FA2 0F
00:0FA3 4F              	   148:   .byte $4f,$f1,$00,$0f
00:0FA4 F1
00:0FA5 00
00:0FA6 0F
                        	   149:   ; end (Y=0xD0 means last entry)
00:0FA7 D0              	   150:   .byte $d0
                        	   151: 
                        	   152: ;;;;;;;;;;;;;;;;;;; vdp_set_registers ;;;;;;;;;;;;;;;;;;;;;;;;
                        	   153: 
                        	   154: vdp_set_registers:
00:0FA8 48              	   155:   pha
00:0FA9 DA              	   156:   phx
00:0FAA A200            	   157:   ldx #0
                        	   158: .loop:
00:0FAC BDC010          	   159:   lda vdp_register_inits,x
00:0FAF 8D0188          	   160:   sta VDP_REG
00:0FB2 8A              	   161:   txa
00:0FB3 0980            	   162:   ora #VDP_REGISTER_BITS 				; combine the register number with the second write pattern
00:0FB5 8D0188          	   163:   sta VDP_REG
00:0FB8 E8              	   164:   inx
00:0FB9 E008            	   165:   cpx #8
00:0FBB D0EF            	   166:   bne .loop
00:0FBD FA              	   167:   plx
00:0FBE 68              	   168:   pla
00:0FBF 60              	   169:   rts
                        	   170: 
                        	   171: vdp_zapram:
00:0FC0 48              	   172:   pha
00:0FC1 5A              	   173:   phy
00:0FC2 DA              	   174:   phx
00:0FC3 A040            	   175:   ldy #$40
00:0FC5 A900            	   176:   lda #0
00:0FC7 8D0188          	   177:   sta VDP_REG
00:0FCA 8C0188          	   178:   sty VDP_REG
00:0FCD A2C0            	   179:   ldx #$c0
                        	   180: nexf:
00:0FCF A000            	   181:   ldy #0
                        	   182: zapf:
00:0FD1 8D0088          	   183:   sta VDP_VRAM
00:0FD4 C8              	   184:   iny
00:0FD5 D0FA            	   185:   bne zapf
00:0FD7 E8              	   186:   inx
00:0FD8 D0F5            	   187:   bne nexf
00:0FDA FA              	   188:   plx
00:0FDB 7A              	   189:   ply
00:0FDC 68              	   190:   pla
00:0FDD 60              	   191:   rts
                        	   192: 
                        	   193: wait:
00:0FDE DA              	   194: 	phx
00:0FDF 5A              	   195: 	phy
00:0FE0 A8              	   196:         tay          ; load secondary loop cycle count (A reg)
00:0FE1 A2FF            	   197:         ldx  #$ff
00:0FE3 CA              	   198: delay   dex          ; (2 cycles)
00:0FE4 D0FD            	   199:         bne  delay   ; (3 cycles in loop, 2 cycles at end)
00:0FE6 88              	   200:         dey          ; (2 cycles)
00:0FE7 D0FA            	   201:         bne  delay   ; (3 cycles in loop, 2 cycles at end)
00:0FE9 7A              	   202: 	ply
00:0FEA FA              	   203: 	plx
00:0FEB 60              	   204: 	rts
                        	   205: 
                        	   206: changecolor:
00:0FEC 48              	   207:   pha
00:0FED EEC710          	   208:   inc vdp_register_7
00:0FF0 ADC710          	   209:   lda vdp_register_7
00:0FF3 8D0188          	   210:   sta VDP_REG
00:0FF6 A987            	   211:   lda #$87
00:0FF8 8D0188          	   212:   sta VDP_REG
00:0FFB 68              	   213:   pla
00:0FFC 60              	   214:   rts
                        	   215: 
                        	   216: ;;;;;;;;;;;;;;;;;;; vdp_initialize_name_table ;;;;;;;;;;;;;;;;;;;
                        	   217: 
                        	   218: vdp_initialize_name_table:
00:0FFD 48              	   219:   pha
00:0FFE DA              	   220:   phx
00:0FFF 5A              	   221:   phy
                        	   222:   vdp_write_vram VDP_NAME_TABLE_BASE
00:1000 48              	     1M   pha
00:1001 A900            	     2M   lda #<(VDP_NAME_TABLE_BASE)
00:1003 8D0188          	     3M   sta VDP_REG
00:1006 A944            	     4M   lda #(VDP_WRITE_VRAM_BIT | >VDP_NAME_TABLE_BASE)
00:1008 8D0188          	     5M   sta VDP_REG
00:100B 68              	     6M   pla
00:100C 6432            	   223:   stz VDP_NAME_POINTER
00:100E A920            	   224:   lda #$20
00:1010 A000            	   225:   ldy #0
                        	   226: vdp_name_table_loop:
                        	   227:   ;sty VDP_VRAM
00:1012 8D0088          	   228:   sta VDP_VRAM
00:1015 C8              	   229:   iny
00:1016 D0FA            	   230:   bne vdp_name_table_loop
                        	   231: 
00:1018 E632            	   232:   inc VDP_NAME_POINTER
00:101A A632            	   233:   ldx VDP_NAME_POINTER
00:101C E003            	   234:   cpx #3
00:101E D0F2            	   235:   bne vdp_name_table_loop
                        	   236:   
00:1020 7A              	   237:   ply
00:1021 FA              	   238:   plx
00:1022 68              	   239:   pla
00:1023 60              	   240:   rts
                        	   241: 
                        	   242: vdp_write_name_table:
00:1024 48              	   243:   pha
00:1025 DA              	   244:   phx
                        	   245:   vdp_write_vram TEXT_LOC
00:1026 48              	     1M   pha
00:1027 A90F            	     2M   lda #<(TEXT_LOC)
00:1029 8D0188          	     3M   sta VDP_REG
00:102C A944            	     4M   lda #(VDP_WRITE_VRAM_BIT | >TEXT_LOC)
00:102E 8D0188          	     5M   sta VDP_REG
00:1031 68              	     6M   pla
                        	   246:   ;ldx #0
                        	   247: ;.loop:
                        	   248:   ;lda text_vdp,x
                        	   249:   ;beq end_write
                        	   250:   ;sta VDP_VRAM
                        	   251:   ;inx
                        	   252:   ;jmp .loop
                        	   253:   
                        	   254:   ; make dotted vertical line
00:1032 A90F            	   255:   lda #<TEXT_LOC
00:1034 8530            	   256:   sta VDP_PATTERN_INIT
00:1036 A904            	   257:   lda #>TEXT_LOC
00:1038 8531            	   258:   sta VDP_PATTERN_INIT_HI
                        	   259: .lp
00:103A A901            	   260:   lda #$01 ; vertical line
00:103C 8D0088          	   261:   sta VDP_VRAM
00:103F A530            	   262:   lda VDP_PATTERN_INIT
00:1041 6940            	   263:   adc #64 ; 64 cuz dotted
00:1043 8530            	   264:   sta VDP_PATTERN_INIT
00:1045 8D0188          	   265:   sta VDP_REG ; low
00:1048 6900            	   266:   adc #0 ; carry
00:104A 8531            	   267:   sta VDP_PATTERN_INIT_HI
00:104C C903            	   268:   cmp #$03 ; done?
00:104E F008            	   269:   beq .done
00:1050 0540            	   270:   ora VDP_WRITE_VRAM_BIT ; send vram
00:1052 8D0188          	   271:   sta VDP_REG
00:1055 4C3A10          	   272:   jmp .lp
                        	   273: .done
00:1058 FA              	   274:   plx
00:1059 68              	   275:   pla
00:105A 60              	   276:   rts 
                        	   277: 
                        	   278: ;  .include "wavid.s"
                        	   279: 
                        	   280: ;;;;;;;;;;;;;;;;;;; vdp_initialize_pattern_table ;;;;;;;;;;;;;;;;;;;
                        	   281: 
                        	   282: vdp_initialize_pattern_table:
00:105B 48              	   283:   pha
00:105C DA              	   284:   phx
                        	   285:   vdp_write_vram VDP_PATTERN_TABLE_BASE
00:105D 48              	     1M   pha
00:105E A900            	     2M   lda #<(VDP_PATTERN_TABLE_BASE)
00:1060 8D0188          	     3M   sta VDP_REG
00:1063 A948            	     4M   lda #(VDP_WRITE_VRAM_BIT | >VDP_PATTERN_TABLE_BASE)
00:1065 8D0188          	     5M   sta VDP_REG
00:1068 68              	     6M   pla
00:1069 A900            	   286:   lda #<vdp_pattern                         ; load the start address of the patterns to zero page
00:106B 8530            	   287:   sta VDP_PATTERN_INIT
00:106D A912            	   288:   lda #>vdp_pattern
00:106F 8531            	   289:   sta VDP_PATTERN_INIT_HI
                        	   290: vdp_pattern_table_loop:
00:1071 B230            	   291:   lda (VDP_PATTERN_INIT)                  ; load A with the value at VDP_PATTERN_INIT 
00:1073 8D0088          	   292:   sta VDP_VRAM                            ; and store it to VRAM
00:1076 E630            	   293:   inc VDP_PATTERN_INIT
00:1078 A530            	   294:   lda VDP_PATTERN_INIT
00:107A D002            	   295:   bne wopeee
00:107C E631            	   296:   inc VDP_PATTERN_INIT_HI
                        	   297: wopeee:
00:107E A530            	   298:   lda VDP_PATTERN_INIT
00:1080 C900            	   299:   cmp #<vdp_pattern_end
00:1082 D0ED            	   300:   bne vdp_pattern_table_loop
00:1084 A531            	   301:   lda VDP_PATTERN_INIT_HI
00:1086 C916            	   302:   cmp #>vdp_pattern_end
00:1088 D0E7            	   303:   bne vdp_pattern_table_loop
00:108A FA              	   304:   plx
00:108B 68              	   305:   pla
00:108C 60              	   306:   rts
                        	   307: 
                        	   308: ;;;;;;;;;;;;;;;;;;; vdp_initialize_color_table ;;;;;;;;;;;;;;;;;;;
                        	   309: 
                        	   310: vdp_initialize_color_table:
                        	   311: ;  pha
                        	   312: ;  phx
                        	   313: ;  vdp_write_vram VDP_COLOR_TABLE_BASE
                        	   314: ;  lda #<vdp_color                         ; load the start address of the patterns to zero page
                        	   315: ;  sta VDP_PATTERN_INIT
                        	   316: ;  lda #>vdp_color
                        	   317: ;  sta VDP_PATTERN_INIT_HI
                        	   318: ;vdp_color_table_loop:
                        	   319: ;  lda (VDP_PATTERN_INIT)                  ; load A with the value at VDP_PATTERN_INIT 
                        	   320: ;  sta VDP_VRAM                            ; and store it to VRAM
                        	   321: ;  inc VDP_PATTERN_INIT
                        	   322: ;  lda VDP_PATTERN_INIT
                        	   323: ;  bne wopee
                        	   324: ;  inc VDP_PATTERN_INIT_HI
                        	   325: ;wopee:
                        	   326: ;  lda VDP_PATTERN_INIT
                        	   327: ;  cmp #<vdp_color_end
                        	   328: ;  bne vdp_color_table_loop
                        	   329: ;  lda VDP_PATTERN_INIT_HI
                        	   330: ;  cmp #>vdp_color_end
                        	   331: ;  bne vdp_color_table_loop
                        	   332: ;  plx
                        	   333: ;  pla
                        	   334: ;  rts
00:108D 48              	   335:   pha
00:108E DA              	   336:   phx
                        	   337:   vdp_write_vram VDP_COLOR_TABLE_BASE
00:108F 48              	     1M   pha
00:1090 A900            	     2M   lda #<(VDP_COLOR_TABLE_BASE)
00:1092 8D0188          	     3M   sta VDP_REG
00:1095 A960            	     4M   lda #(VDP_WRITE_VRAM_BIT | >VDP_COLOR_TABLE_BASE)
00:1097 8D0188          	     5M   sta VDP_REG
00:109A 68              	     6M   pla
00:109B A200            	   338:   ldx #0
                        	   339: vdpclp:
00:109D A9F0            	   340:   lda #$f0
00:109F 8D0088          	   341:   sta VDP_VRAM
00:10A2 E8              	   342:   inx
00:10A3 E020            	   343:   cpx #32
00:10A5 D0F6            	   344:   bne vdpclp
00:10A7 FA              	   345:   plx
00:10A8 68              	   346:   pla
00:10A9 60              	   347:   rts
                        	   348: 
                        	   349: ;;;;;;;;;;;;;;;;;;; vdp_enable_display ;;;;;;;;;;;;;;;;;;;;;;;;;
                        	   350: 
                        	   351: vdp_enable_display:
00:10AA 48              	   352:   pha
00:10AB A9E2            	   353:   lda #%11100010			; select 16k bytes of vram, enable the active display, enable vdp interrupt, set gfx mode 1
00:10AD 8D0188          	   354:   sta VDP_REG
00:10B0 A981            	   355:   lda #(VDP_REGISTER_BITS | 1)
00:10B2 8D0188          	   356:   sta VDP_REG
00:10B5 68              	   357:   pla
00:10B6 60              	   358:   rts
                        	   359: 
                        	   360: text_vdp:
                        	   361:   ;.byte "Hello, World!", $00
00:10B7 53434F5245      	   362:   .byte "SCORE", $3a, " 0", $00
00:10BC 3A
00:10BD 2030
00:10BF 00
                        	   363: 
                        	   364: 
                        	   365: vdp_register_inits:
00:10C0 00              	   366: vdp_register_0: .byte %00000000 ; 0  0  0  0  0  0  M3 EXTVDP
00:10C1 82              	   367: vdp_register_1: .byte %10000010 ;16k Bl IE M1 M2 0 Siz MAG
00:10C2 01              	   368: vdp_register_2: .byte $01       ; Name table base / $400. $01 = $0400
00:10C3 80              	   369: vdp_register_3: .byte $80       ; Color table base = $2000
00:10C4 01              	   370: vdp_register_4: .byte $01       ; Pattern table base / $800. $01 = $0800
00:10C5 0E              	   371: vdp_register_5: .byte $0e       ; Sprite attribute table base = $0700
00:10C6 00              	   372: vdp_register_6: .byte $00       ; Sprite pattern generator = $0000
00:10C7 01              	   373: vdp_register_7: .byte $01       ; FG/BG. 1=>Black, F=>White
                        	   374: vdp_end_register_inits:
                        	   375: 
                        	   376: ;;;;;;;;;;;;;;;;;;; vdp_sprpatterns ;;;;;;;;;;;;;;;;;;;;;
                        	   377: vdp_block: ; (0x00)
00:10C8 FF              	   378:   .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
00:10C9 FF
00:10CA FF
00:10CB FF
00:10CC FF
00:10CD FF
00:10CE FF
00:10CF FF
00:10D0 FF              	   379:   .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
00:10D1 FF
00:10D2 FF
00:10D3 FF
00:10D4 FF
00:10D5 FF
00:10D6 FF
00:10D7 FF
00:10D8 FF              	   380:   .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
00:10D9 FF
00:10DA FF
00:10DB FF
00:10DC FF
00:10DD FF
00:10DE FF
00:10DF FF
00:10E0 FF              	   381:   .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
00:10E1 FF
00:10E2 FF
00:10E3 FF
00:10E4 FF
00:10E5 FF
00:10E6 FF
00:10E7 FF
                        	   382: vdp_ball: ; (0x04)
00:10E8 07              	   383:   .byte $07,$1f,$3f,$7f,$7f,$ff,$ff,$ff
00:10E9 1F
00:10EA 3F
00:10EB 7F
00:10EC 7F
00:10ED FF
00:10EE FF
00:10EF FF
00:10F0 FF              	   384:   .byte $ff,$ff,$ff,$7f,$7f,$3f,$1f,$07
00:10F1 FF
00:10F2 FF
00:10F3 7F
00:10F4 7F
00:10F5 3F
00:10F6 1F
00:10F7 07
00:10F8 E0              	   385:   .byte $e0,$f8,$fc,$fe,$fe,$ff,$ff,$ff
00:10F9 F8
00:10FA FC
00:10FB FE
00:10FC FE
00:10FD FF
00:10FE FF
00:10FF FF
00:1100 FF              	   386:   .byte $ff,$ff,$ff,$fe,$fe,$fc,$f8,$e0
00:1101 FF
00:1102 FF
00:1103 FE
00:1104 FE
00:1105 FC
00:1106 F8
00:1107 E0
                        	   387: 
                        	   388: ;;;;;;;;;;;;;;;;;;; vdp_color ;;;;;;;;;;;;;;;;;;;;;
                        	   389: ;  .align 8
                        	   390: ;vdp_color:
                        	   391: ;  .binary "???.TIAC"
                        	   392: ;vdp_color_end:
                        	   393: ;  .byte $00
                        	   394: 
                        	   395: ;;;;;;;;;;;;;;;;;;; vdp_patterns ;;;;;;;;;;;;;;;;;;;;;
                        	   396: 
                        	   397:   .align 8
                        	   398: vdp_pattern:
                        	   399: ;  .binary "???.TIAP"
                        	   400: ; line drawing
00:1200 00              	   401:   .byte $00,$00,$00,$FF,$FF,$00,$00,$00 ; lr
00:1201 00
00:1202 00
00:1203 FF
00:1204 FF
00:1205 00
00:1206 00
00:1207 00
00:1208 18              	   402:   .byte $18,$18,$18,$18,$18,$18,$18,$18 ; ud
00:1209 18
00:120A 18
00:120B 18
00:120C 18
00:120D 18
00:120E 18
00:120F 18
00:1210 00              	   403:   .byte $00,$00,$00,$F8,$F8,$18,$18,$18 ; ld
00:1211 00
00:1212 00
00:1213 F8
00:1214 F8
00:1215 18
00:1216 18
00:1217 18
00:1218 00              	   404:   .byte $00,$00,$00,$1F,$1F,$18,$18,$18 ; rd
00:1219 00
00:121A 00
00:121B 1F
00:121C 1F
00:121D 18
00:121E 18
00:121F 18
00:1220 18              	   405:   .byte $18,$18,$18,$F8,$F8,$00,$00,$00 ; lu
00:1221 18
00:1222 18
00:1223 F8
00:1224 F8
00:1225 00
00:1226 00
00:1227 00
00:1228 18              	   406:   .byte $18,$18,$18,$1F,$1F,$00,$00,$00 ; ur
00:1229 18
00:122A 18
00:122B 1F
00:122C 1F
00:122D 00
00:122E 00
00:122F 00
00:1230 18              	   407:   .byte $18,$18,$18,$FF,$FF,$18,$18,$18 ; lurd
00:1231 18
00:1232 18
00:1233 FF
00:1234 FF
00:1235 18
00:1236 18
00:1237 18
                        	   408: ; <nonsense for debug>
00:1238 07              	   409:   .byte $07,$07,$07,$07,$07,$07,$07,$00 ; 07
00:1239 07
00:123A 07
00:123B 07
00:123C 07
00:123D 07
00:123E 07
00:123F 00
00:1240 08              	   410:   .byte $08,$08,$08,$08,$08,$08,$08,$00 ; 08
00:1241 08
00:1242 08
00:1243 08
00:1244 08
00:1245 08
00:1246 08
00:1247 00
00:1248 09              	   411:   .byte $09,$09,$09,$09,$09,$09,$09,$00 ; 09
00:1249 09
00:124A 09
00:124B 09
00:124C 09
00:124D 09
00:124E 09
00:124F 00
00:1250 0A              	   412:   .byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$00 ; 0A
00:1251 0A
00:1252 0A
00:1253 0A
00:1254 0A
00:1255 0A
00:1256 0A
00:1257 00
00:1258 0B              	   413:   .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$00 ; 0B
00:1259 0B
00:125A 0B
00:125B 0B
00:125C 0B
00:125D 0B
00:125E 0B
00:125F 00
00:1260 0C              	   414:   .byte $0C,$0C,$0C,$0C,$0C,$0C,$0C,$00 ; 0C
00:1261 0C
00:1262 0C
00:1263 0C
00:1264 0C
00:1265 0C
00:1266 0C
00:1267 00
00:1268 0D              	   415:   .byte $0D,$0D,$0D,$0D,$0D,$0D,$0D,$00 ; 0D
00:1269 0D
00:126A 0D
00:126B 0D
00:126C 0D
00:126D 0D
00:126E 0D
00:126F 00
00:1270 0E              	   416:   .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$00 ; 0E
00:1271 0E
00:1272 0E
00:1273 0E
00:1274 0E
00:1275 0E
00:1276 0E
00:1277 00
00:1278 0F              	   417:   .byte $0F,$0F,$0F,$0F,$0F,$0F,$0F,$00 ; 0F
00:1279 0F
00:127A 0F
00:127B 0F
00:127C 0F
00:127D 0F
00:127E 0F
00:127F 00
00:1280 10              	   418:   .byte $10,$10,$10,$10,$10,$10,$10,$00 ; 10
00:1281 10
00:1282 10
00:1283 10
00:1284 10
00:1285 10
00:1286 10
00:1287 00
00:1288 11              	   419:   .byte $11,$11,$11,$11,$11,$11,$11,$00 ; 11
00:1289 11
00:128A 11
00:128B 11
00:128C 11
00:128D 11
00:128E 11
00:128F 00
00:1290 12              	   420:   .byte $12,$12,$12,$12,$12,$12,$12,$00 ; 12
00:1291 12
00:1292 12
00:1293 12
00:1294 12
00:1295 12
00:1296 12
00:1297 00
00:1298 13              	   421:   .byte $13,$13,$13,$13,$13,$13,$13,$00 ; 13
00:1299 13
00:129A 13
00:129B 13
00:129C 13
00:129D 13
00:129E 13
00:129F 00
00:12A0 14              	   422:   .byte $14,$14,$14,$14,$14,$14,$14,$00 ; 14
00:12A1 14
00:12A2 14
00:12A3 14
00:12A4 14
00:12A5 14
00:12A6 14
00:12A7 00
00:12A8 15              	   423:   .byte $15,$15,$15,$15,$15,$15,$15,$00 ; 15
00:12A9 15
00:12AA 15
00:12AB 15
00:12AC 15
00:12AD 15
00:12AE 15
00:12AF 00
00:12B0 16              	   424:   .byte $16,$16,$16,$16,$16,$16,$16,$00 ; 16
00:12B1 16
00:12B2 16
00:12B3 16
00:12B4 16
00:12B5 16
00:12B6 16
00:12B7 00
00:12B8 17              	   425:   .byte $17,$17,$17,$17,$17,$17,$17,$00 ; 17
00:12B9 17
00:12BA 17
00:12BB 17
00:12BC 17
00:12BD 17
00:12BE 17
00:12BF 00
00:12C0 18              	   426:   .byte $18,$18,$18,$18,$18,$18,$18,$00 ; 18
00:12C1 18
00:12C2 18
00:12C3 18
00:12C4 18
00:12C5 18
00:12C6 18
00:12C7 00
00:12C8 19              	   427:   .byte $19,$19,$19,$19,$19,$19,$19,$00 ; 19
00:12C9 19
00:12CA 19
00:12CB 19
00:12CC 19
00:12CD 19
00:12CE 19
00:12CF 00
00:12D0 1A              	   428:   .byte $1A,$1A,$1A,$1A,$1A,$1A,$1A,$00 ; 1A
00:12D1 1A
00:12D2 1A
00:12D3 1A
00:12D4 1A
00:12D5 1A
00:12D6 1A
00:12D7 00
00:12D8 1B              	   429:   .byte $1B,$1B,$1B,$1B,$1B,$1B,$1B,$00 ; 1B
00:12D9 1B
00:12DA 1B
00:12DB 1B
00:12DC 1B
00:12DD 1B
00:12DE 1B
00:12DF 00
00:12E0 1C              	   430:   .byte $1C,$1C,$1C,$1C,$1C,$1C,$1C,$00 ; 1C
00:12E1 1C
00:12E2 1C
00:12E3 1C
00:12E4 1C
00:12E5 1C
00:12E6 1C
00:12E7 00
00:12E8 1D              	   431:   .byte $1D,$1D,$1D,$1D,$1D,$1D,$1D,$00 ; 1D
00:12E9 1D
00:12EA 1D
00:12EB 1D
00:12EC 1D
00:12ED 1D
00:12EE 1D
00:12EF 00
00:12F0 1E              	   432:   .byte $1E,$1E,$1E,$1E,$1E,$1E,$1E,$00 ; 1E
00:12F1 1E
00:12F2 1E
00:12F3 1E
00:12F4 1E
00:12F5 1E
00:12F6 1E
00:12F7 00
00:12F8 1F              	   433:   .byte $1F,$1F,$1F,$1F,$1F,$1F,$1F,$00 ; 1F
00:12F9 1F
00:12FA 1F
00:12FB 1F
00:12FC 1F
00:12FD 1F
00:12FE 1F
00:12FF 00
                        	   434: ; </nonsense>
00:1300 00              	   435:   .byte $00,$00,$00,$00,$00,$00,$00,$00 ; ' '
00:1301 00
00:1302 00
00:1303 00
00:1304 00
00:1305 00
00:1306 00
00:1307 00
00:1308 20              	   436:   .byte $20,$20,$20,$00,$20,$20,$00,$00 ; !
00:1309 20
00:130A 20
00:130B 00
00:130C 20
00:130D 20
00:130E 00
00:130F 00
00:1310 50              	   437:   .byte $50,$50,$50,$00,$00,$00,$00,$00 ; "
00:1311 50
00:1312 50
00:1313 00
00:1314 00
00:1315 00
00:1316 00
00:1317 00
00:1318 50              	   438:   .byte $50,$50,$F8,$50,$F8,$50,$50,$00 ; #
00:1319 50
00:131A F8
00:131B 50
00:131C F8
00:131D 50
00:131E 50
00:131F 00
00:1320 20              	   439:   .byte $20,$78,$A0,$70,$28,$F0,$20,$00 ; $
00:1321 78
00:1322 A0
00:1323 70
00:1324 28
00:1325 F0
00:1326 20
00:1327 00
00:1328 C0              	   440:   .byte $C0,$C8,$10,$20,$40,$98,$18,$00 ; %
00:1329 C8
00:132A 10
00:132B 20
00:132C 40
00:132D 98
00:132E 18
00:132F 00
00:1330 40              	   441:   .byte $40,$A0,$A0,$40,$A8,$90,$68,$00 ; &
00:1331 A0
00:1332 A0
00:1333 40
00:1334 A8
00:1335 90
00:1336 68
00:1337 00
00:1338 20              	   442:   .byte $20,$20,$40,$00,$00,$00,$00,$00 ; '
00:1339 20
00:133A 40
00:133B 00
00:133C 00
00:133D 00
00:133E 00
00:133F 00
00:1340 20              	   443:   .byte $20,$40,$80,$80,$80,$40,$20,$00 ; (
00:1341 40
00:1342 80
00:1343 80
00:1344 80
00:1345 40
00:1346 20
00:1347 00
00:1348 20              	   444:   .byte $20,$10,$08,$08,$08,$10,$20,$00 ; )
00:1349 10
00:134A 08
00:134B 08
00:134C 08
00:134D 10
00:134E 20
00:134F 00
00:1350 20              	   445:   .byte $20,$A8,$70,$20,$70,$A8,$20,$00 ; *
00:1351 A8
00:1352 70
00:1353 20
00:1354 70
00:1355 A8
00:1356 20
00:1357 00
00:1358 00              	   446:   .byte $00,$20,$20,$F8,$20,$20,$00,$00 ; +
00:1359 20
00:135A 20
00:135B F8
00:135C 20
00:135D 20
00:135E 00
00:135F 00
00:1360 00              	   447:   .byte $00,$00,$00,$00,$20,$20,$40,$00 ; ,
00:1361 00
00:1362 00
00:1363 00
00:1364 20
00:1365 20
00:1366 40
00:1367 00
00:1368 00              	   448:   .byte $00,$00,$00,$F8,$00,$00,$00,$00 ; -
00:1369 00
00:136A 00
00:136B F8
00:136C 00
00:136D 00
00:136E 00
00:136F 00
00:1370 00              	   449:   .byte $00,$00,$00,$00,$20,$20,$00,$00 ; .
00:1371 00
00:1372 00
00:1373 00
00:1374 20
00:1375 20
00:1376 00
00:1377 00
00:1378 00              	   450:   .byte $00,$08,$10,$20,$40,$80,$00,$00 ; /
00:1379 08
00:137A 10
00:137B 20
00:137C 40
00:137D 80
00:137E 00
00:137F 00
00:1380 70              	   451:   .byte $70,$88,$98,$A8,$C8,$88,$70,$00 ; 0
00:1381 88
00:1382 98
00:1383 A8
00:1384 C8
00:1385 88
00:1386 70
00:1387 00
00:1388 20              	   452:   .byte $20,$60,$20,$20,$20,$20,$70,$00 ; 1
00:1389 60
00:138A 20
00:138B 20
00:138C 20
00:138D 20
00:138E 70
00:138F 00
00:1390 70              	   453:   .byte $70,$88,$08,$30,$40,$80,$F8,$00 ; 2
00:1391 88
00:1392 08
00:1393 30
00:1394 40
00:1395 80
00:1396 F8
00:1397 00
00:1398 F8              	   454:   .byte $F8,$08,$10,$30,$08,$88,$70,$00 ; 3
00:1399 08
00:139A 10
00:139B 30
00:139C 08
00:139D 88
00:139E 70
00:139F 00
00:13A0 10              	   455:   .byte $10,$30,$50,$90,$F8,$10,$10,$00 ; 4
00:13A1 30
00:13A2 50
00:13A3 90
00:13A4 F8
00:13A5 10
00:13A6 10
00:13A7 00
00:13A8 F8              	   456:   .byte $F8,$80,$F0,$08,$08,$88,$70,$00 ; 5
00:13A9 80
00:13AA F0
00:13AB 08
00:13AC 08
00:13AD 88
00:13AE 70
00:13AF 00
00:13B0 38              	   457:   .byte $38,$40,$80,$F0,$88,$88,$70,$00 ; 6
00:13B1 40
00:13B2 80
00:13B3 F0
00:13B4 88
00:13B5 88
00:13B6 70
00:13B7 00
00:13B8 F8              	   458:   .byte $F8,$08,$10,$20,$40,$40,$40,$00 ; 7
00:13B9 08
00:13BA 10
00:13BB 20
00:13BC 40
00:13BD 40
00:13BE 40
00:13BF 00
00:13C0 70              	   459:   .byte $70,$88,$88,$70,$88,$88,$70,$00 ; 8
00:13C1 88
00:13C2 88
00:13C3 70
00:13C4 88
00:13C5 88
00:13C6 70
00:13C7 00
00:13C8 70              	   460:   .byte $70,$88,$88,$78,$08,$10,$E0,$00 ; 9
00:13C9 88
00:13CA 88
00:13CB 78
00:13CC 08
00:13CD 10
00:13CE E0
00:13CF 00
00:13D0 00              	   461:   .byte $00,$00,$20,$00,$20,$00,$00,$00 ; :
00:13D1 00
00:13D2 20
00:13D3 00
00:13D4 20
00:13D5 00
00:13D6 00
00:13D7 00
00:13D8 00              	   462:   .byte $00,$00,$20,$00,$20,$20,$40,$00 ; ;
00:13D9 00
00:13DA 20
00:13DB 00
00:13DC 20
00:13DD 20
00:13DE 40
00:13DF 00
00:13E0 10              	   463:   .byte $10,$20,$40,$80,$40,$20,$10,$00 ; <
00:13E1 20
00:13E2 40
00:13E3 80
00:13E4 40
00:13E5 20
00:13E6 10
00:13E7 00
00:13E8 00              	   464:   .byte $00,$00,$F8,$00,$F8,$00,$00,$00 ; =
00:13E9 00
00:13EA F8
00:13EB 00
00:13EC F8
00:13ED 00
00:13EE 00
00:13EF 00
00:13F0 40              	   465:   .byte $40,$20,$10,$08,$10,$20,$40,$00 ; >
00:13F1 20
00:13F2 10
00:13F3 08
00:13F4 10
00:13F5 20
00:13F6 40
00:13F7 00
00:13F8 70              	   466:   .byte $70,$88,$10,$20,$20,$00,$20,$00 ; ?
00:13F9 88
00:13FA 10
00:13FB 20
00:13FC 20
00:13FD 00
00:13FE 20
00:13FF 00
00:1400 70              	   467:   .byte $70,$88,$A8,$B8,$B0,$80,$78,$00 ; @
00:1401 88
00:1402 A8
00:1403 B8
00:1404 B0
00:1405 80
00:1406 78
00:1407 00
00:1408 20              	   468:   .byte $20,$50,$88,$88,$F8,$88,$88,$00 ; A
00:1409 50
00:140A 88
00:140B 88
00:140C F8
00:140D 88
00:140E 88
00:140F 00
00:1410 F0              	   469:   .byte $F0,$88,$88,$F0,$88,$88,$F0,$00 ; B
00:1411 88
00:1412 88
00:1413 F0
00:1414 88
00:1415 88
00:1416 F0
00:1417 00
00:1418 70              	   470:   .byte $70,$88,$80,$80,$80,$88,$70,$00 ; C
00:1419 88
00:141A 80
00:141B 80
00:141C 80
00:141D 88
00:141E 70
00:141F 00
00:1420 F0              	   471:   .byte $F0,$88,$88,$88,$88,$88,$F0,$00 ; D
00:1421 88
00:1422 88
00:1423 88
00:1424 88
00:1425 88
00:1426 F0
00:1427 00
00:1428 F8              	   472:   .byte $F8,$80,$80,$F0,$80,$80,$F8,$00 ; E
00:1429 80
00:142A 80
00:142B F0
00:142C 80
00:142D 80
00:142E F8
00:142F 00
00:1430 F8              	   473:   .byte $F8,$80,$80,$F0,$80,$80,$80,$00 ; F
00:1431 80
00:1432 80
00:1433 F0
00:1434 80
00:1435 80
00:1436 80
00:1437 00
00:1438 78              	   474:   .byte $78,$80,$80,$80,$98,$88,$78,$00 ; G
00:1439 80
00:143A 80
00:143B 80
00:143C 98
00:143D 88
00:143E 78
00:143F 00
00:1440 88              	   475:   .byte $88,$88,$88,$F8,$88,$88,$88,$00 ; H
00:1441 88
00:1442 88
00:1443 F8
00:1444 88
00:1445 88
00:1446 88
00:1447 00
00:1448 70              	   476:   .byte $70,$20,$20,$20,$20,$20,$70,$00 ; I
00:1449 20
00:144A 20
00:144B 20
00:144C 20
00:144D 20
00:144E 70
00:144F 00
00:1450 08              	   477:   .byte $08,$08,$08,$08,$08,$88,$70,$00 ; J
00:1451 08
00:1452 08
00:1453 08
00:1454 08
00:1455 88
00:1456 70
00:1457 00
00:1458 88              	   478:   .byte $88,$90,$A0,$C0,$A0,$90,$88,$00 ; K
00:1459 90
00:145A A0
00:145B C0
00:145C A0
00:145D 90
00:145E 88
00:145F 00
00:1460 80              	   479:   .byte $80,$80,$80,$80,$80,$80,$F8,$00 ; L
00:1461 80
00:1462 80
00:1463 80
00:1464 80
00:1465 80
00:1466 F8
00:1467 00
00:1468 88              	   480:   .byte $88,$D8,$A8,$A8,$88,$88,$88,$00 ; M
00:1469 D8
00:146A A8
00:146B A8
00:146C 88
00:146D 88
00:146E 88
00:146F 00
00:1470 88              	   481:   .byte $88,$88,$C8,$A8,$98,$88,$88,$00 ; N
00:1471 88
00:1472 C8
00:1473 A8
00:1474 98
00:1475 88
00:1476 88
00:1477 00
00:1478 70              	   482:   .byte $70,$88,$88,$88,$88,$88,$70,$00 ; O
00:1479 88
00:147A 88
00:147B 88
00:147C 88
00:147D 88
00:147E 70
00:147F 00
00:1480 F0              	   483:   .byte $F0,$88,$88,$F0,$80,$80,$80,$00 ; P
00:1481 88
00:1482 88
00:1483 F0
00:1484 80
00:1485 80
00:1486 80
00:1487 00
00:1488 70              	   484:   .byte $70,$88,$88,$88,$A8,$90,$68,$00 ; Q
00:1489 88
00:148A 88
00:148B 88
00:148C A8
00:148D 90
00:148E 68
00:148F 00
00:1490 F0              	   485:   .byte $F0,$88,$88,$F0,$A0,$90,$88,$00 ; R
00:1491 88
00:1492 88
00:1493 F0
00:1494 A0
00:1495 90
00:1496 88
00:1497 00
00:1498 70              	   486:   .byte $70,$88,$80,$70,$08,$88,$70,$00 ; S
00:1499 88
00:149A 80
00:149B 70
00:149C 08
00:149D 88
00:149E 70
00:149F 00
00:14A0 F8              	   487:   .byte $F8,$20,$20,$20,$20,$20,$20,$00 ; T
00:14A1 20
00:14A2 20
00:14A3 20
00:14A4 20
00:14A5 20
00:14A6 20
00:14A7 00
00:14A8 88              	   488:   .byte $88,$88,$88,$88,$88,$88,$70,$00 ; U
00:14A9 88
00:14AA 88
00:14AB 88
00:14AC 88
00:14AD 88
00:14AE 70
00:14AF 00
00:14B0 88              	   489:   .byte $88,$88,$88,$88,$50,$50,$20,$00 ; V
00:14B1 88
00:14B2 88
00:14B3 88
00:14B4 50
00:14B5 50
00:14B6 20
00:14B7 00
00:14B8 88              	   490:   .byte $88,$88,$88,$A8,$A8,$D8,$88,$00 ; W
00:14B9 88
00:14BA 88
00:14BB A8
00:14BC A8
00:14BD D8
00:14BE 88
00:14BF 00
00:14C0 88              	   491:   .byte $88,$88,$50,$20,$50,$88,$88,$00 ; X
00:14C1 88
00:14C2 50
00:14C3 20
00:14C4 50
00:14C5 88
00:14C6 88
00:14C7 00
00:14C8 88              	   492:   .byte $88,$88,$50,$20,$20,$20,$20,$00 ; Y
00:14C9 88
00:14CA 50
00:14CB 20
00:14CC 20
00:14CD 20
00:14CE 20
00:14CF 00
00:14D0 F8              	   493:   .byte $F8,$08,$10,$20,$40,$80,$F8,$00 ; Z
00:14D1 08
00:14D2 10
00:14D3 20
00:14D4 40
00:14D5 80
00:14D6 F8
00:14D7 00
00:14D8 F8              	   494:   .byte $F8,$C0,$C0,$C0,$C0,$C0,$F8,$00 ; [
00:14D9 C0
00:14DA C0
00:14DB C0
00:14DC C0
00:14DD C0
00:14DE F8
00:14DF 00
00:14E0 00              	   495:   .byte $00,$80,$40,$20,$10,$08,$00,$00 ; \
00:14E1 80
00:14E2 40
00:14E3 20
00:14E4 10
00:14E5 08
00:14E6 00
00:14E7 00
00:14E8 F8              	   496:   .byte $F8,$18,$18,$18,$18,$18,$F8,$00 ; ]
00:14E9 18
00:14EA 18
00:14EB 18
00:14EC 18
00:14ED 18
00:14EE F8
00:14EF 00
00:14F0 00              	   497:   .byte $00,$00,$20,$50,$88,$00,$00,$00 ; ^
00:14F1 00
00:14F2 20
00:14F3 50
00:14F4 88
00:14F5 00
00:14F6 00
00:14F7 00
00:14F8 00              	   498:   .byte $00,$00,$00,$00,$00,$00,$F8,$00 ; _
00:14F9 00
00:14FA 00
00:14FB 00
00:14FC 00
00:14FD 00
00:14FE F8
00:14FF 00
00:1500 40              	   499:   .byte $40,$20,$10,$00,$00,$00,$00,$00 ; `
00:1501 20
00:1502 10
00:1503 00
00:1504 00
00:1505 00
00:1506 00
00:1507 00
00:1508 00              	   500:   .byte $00,$00,$70,$88,$88,$98,$68,$00 ; a
00:1509 00
00:150A 70
00:150B 88
00:150C 88
00:150D 98
00:150E 68
00:150F 00
00:1510 80              	   501:   .byte $80,$80,$F0,$88,$88,$88,$F0,$00 ; b
00:1511 80
00:1512 F0
00:1513 88
00:1514 88
00:1515 88
00:1516 F0
00:1517 00
00:1518 00              	   502:   .byte $00,$00,$78,$80,$80,$80,$78,$00 ; c
00:1519 00
00:151A 78
00:151B 80
00:151C 80
00:151D 80
00:151E 78
00:151F 00
00:1520 08              	   503:   .byte $08,$08,$78,$88,$88,$88,$78,$00 ; d
00:1521 08
00:1522 78
00:1523 88
00:1524 88
00:1525 88
00:1526 78
00:1527 00
00:1528 00              	   504:   .byte $00,$00,$70,$88,$F8,$80,$78,$00 ; e
00:1529 00
00:152A 70
00:152B 88
00:152C F8
00:152D 80
00:152E 78
00:152F 00
00:1530 30              	   505:   .byte $30,$40,$E0,$40,$40,$40,$40,$00 ; f
00:1531 40
00:1532 E0
00:1533 40
00:1534 40
00:1535 40
00:1536 40
00:1537 00
00:1538 00              	   506:   .byte $00,$00,$70,$88,$F8,$08,$F0,$00 ; g
00:1539 00
00:153A 70
00:153B 88
00:153C F8
00:153D 08
00:153E F0
00:153F 00
00:1540 80              	   507:   .byte $80,$80,$F0,$88,$88,$88,$88,$00 ; h
00:1541 80
00:1542 F0
00:1543 88
00:1544 88
00:1545 88
00:1546 88
00:1547 00
00:1548 00              	   508:   .byte $00,$40,$00,$40,$40,$40,$40,$00 ; i
00:1549 40
00:154A 00
00:154B 40
00:154C 40
00:154D 40
00:154E 40
00:154F 00
00:1550 00              	   509:   .byte $00,$20,$00,$20,$20,$A0,$60,$00 ; j
00:1551 20
00:1552 00
00:1553 20
00:1554 20
00:1555 A0
00:1556 60
00:1557 00
00:1558 00              	   510:   .byte $00,$80,$80,$A0,$C0,$A0,$90,$00 ; k
00:1559 80
00:155A 80
00:155B A0
00:155C C0
00:155D A0
00:155E 90
00:155F 00
00:1560 C0              	   511:   .byte $C0,$40,$40,$40,$40,$40,$60,$00 ; l
00:1561 40
00:1562 40
00:1563 40
00:1564 40
00:1565 40
00:1566 60
00:1567 00
00:1568 00              	   512:   .byte $00,$00,$D8,$A8,$A8,$A8,$A8,$00 ; m
00:1569 00
00:156A D8
00:156B A8
00:156C A8
00:156D A8
00:156E A8
00:156F 00
00:1570 00              	   513:   .byte $00,$00,$F0,$88,$88,$88,$88,$00 ; n
00:1571 00
00:1572 F0
00:1573 88
00:1574 88
00:1575 88
00:1576 88
00:1577 00
00:1578 00              	   514:   .byte $00,$00,$70,$88,$88,$88,$70,$00 ; o
00:1579 00
00:157A 70
00:157B 88
00:157C 88
00:157D 88
00:157E 70
00:157F 00
00:1580 00              	   515:   .byte $00,$00,$70,$88,$F0,$80,$80,$00 ; p
00:1581 00
00:1582 70
00:1583 88
00:1584 F0
00:1585 80
00:1586 80
00:1587 00
00:1588 00              	   516:   .byte $00,$00,$F0,$88,$78,$08,$08,$00 ; q
00:1589 00
00:158A F0
00:158B 88
00:158C 78
00:158D 08
00:158E 08
00:158F 00
00:1590 00              	   517:   .byte $00,$00,$70,$88,$80,$80,$80,$00 ; r
00:1591 00
00:1592 70
00:1593 88
00:1594 80
00:1595 80
00:1596 80
00:1597 00
00:1598 00              	   518:   .byte $00,$00,$78,$80,$70,$08,$F0,$00 ; s
00:1599 00
00:159A 78
00:159B 80
00:159C 70
00:159D 08
00:159E F0
00:159F 00
00:15A0 40              	   519:   .byte $40,$40,$F0,$40,$40,$40,$30,$00 ; t
00:15A1 40
00:15A2 F0
00:15A3 40
00:15A4 40
00:15A5 40
00:15A6 30
00:15A7 00
00:15A8 00              	   520:   .byte $00,$00,$88,$88,$88,$88,$78,$00 ; u
00:15A9 00
00:15AA 88
00:15AB 88
00:15AC 88
00:15AD 88
00:15AE 78
00:15AF 00
00:15B0 00              	   521:   .byte $00,$00,$88,$88,$90,$A0,$40,$00 ; v
00:15B1 00
00:15B2 88
00:15B3 88
00:15B4 90
00:15B5 A0
00:15B6 40
00:15B7 00
00:15B8 00              	   522:   .byte $00,$00,$88,$88,$88,$A8,$D8,$00 ; w
00:15B9 00
00:15BA 88
00:15BB 88
00:15BC 88
00:15BD A8
00:15BE D8
00:15BF 00
00:15C0 00              	   523:   .byte $00,$00,$88,$50,$20,$50,$88,$00 ; x
00:15C1 00
00:15C2 88
00:15C3 50
00:15C4 20
00:15C5 50
00:15C6 88
00:15C7 00
00:15C8 00              	   524:   .byte $00,$00,$88,$88,$78,$08,$F0,$00 ; y
00:15C9 00
00:15CA 88
00:15CB 88
00:15CC 78
00:15CD 08
00:15CE F0
00:15CF 00
00:15D0 00              	   525:   .byte $00,$00,$F8,$10,$20,$40,$F8,$00 ; z
00:15D1 00
00:15D2 F8
00:15D3 10
00:15D4 20
00:15D5 40
00:15D6 F8
00:15D7 00
00:15D8 38              	   526:   .byte $38,$40,$20,$C0,$20,$40,$38,$00 ; {
00:15D9 40
00:15DA 20
00:15DB C0
00:15DC 20
00:15DD 40
00:15DE 38
00:15DF 00
00:15E0 40              	   527:   .byte $40,$40,$40,$00,$40,$40,$40,$00 ; |
00:15E1 40
00:15E2 40
00:15E3 00
00:15E4 40
00:15E5 40
00:15E6 40
00:15E7 00
00:15E8 E0              	   528:   .byte $E0,$10,$20,$18,$20,$10,$E0,$00 ; }
00:15E9 10
00:15EA 20
00:15EB 18
00:15EC 20
00:15ED 10
00:15EE E0
00:15EF 00
00:15F0 40              	   529:   .byte $40,$A8,$10,$00,$00,$00,$00,$00 ; ~
00:15F1 A8
00:15F2 10
00:15F3 00
00:15F4 00
00:15F5 00
00:15F6 00
00:15F7 00
00:15F8 A8              	   530:   .byte $A8,$50,$A8,$50,$A8,$50,$A8,$00 ; checkerboard
00:15F9 50
00:15FA A8
00:15FB 50
00:15FC A8
00:15FD 50
00:15FE A8
00:15FF 00
                        	   531: vdp_pattern_end:
                        	   532: 
00:1600 00              	   533:   .byte $00
                        	   534: 


Symbols by name:
TEXT_LOC                         E:040F
VDP_COLOR_TABLE_BASE             E:2000
VDP_NAME_POINTER                 E:0032
VDP_NAME_TABLE_BASE              E:0400
VDP_PATTERN_INIT                 E:0030
VDP_PATTERN_INIT_HI              E:0031
VDP_PATTERN_TABLE_BASE           E:0800
VDP_REG                          E:8801
VDP_REGISTER_BITS                E:0080
VDP_SPRITE_PATTERN_TABLE_BASE    E:0000
VDP_SPR_ATT_TABLE_BASE           E:0700
VDP_VRAM                         E:8800
VDP_WRITE_VRAM_BIT               E:0040
changecolor                      A:0FEC
col                              A:0F27
delay                            A:0FE3
fc                               E:0034
holding                          A:0F16
nexf                             A:0FCF
reset                            A:0F00
text_vdp                         A:10B7
vdp_ball                         A:10E8
vdp_block                        A:10C8
vdp_copysprites                  A:0F4A
vdp_enable_display               A:10AA
vdp_end_register_inits           A:10C8
vdp_initialize_color_table       A:108D
vdp_initialize_name_table        A:0FFD
vdp_initialize_pattern_table     A:105B
vdp_name_table_loop              A:1012
vdp_pattern                      A:1200
vdp_pattern_end                  A:1600
vdp_pattern_table_loop           A:1071
vdp_put_spr                      A:0F6D
vdp_register_0                   A:10C0
vdp_register_1                   A:10C1
vdp_register_2                   A:10C2
vdp_register_3                   A:10C3
vdp_register_4                   A:10C4
vdp_register_5                   A:10C5
vdp_register_6                   A:10C6
vdp_register_7                   A:10C7
vdp_register_inits               A:10C0
vdp_set_registers                A:0FA8
vdp_setup                        A:0F31
vdp_spr                          A:0F8B
vdp_write_name_table             A:1024
vdp_zapram                       A:0FC0
vdpclp                           A:109D
wait                             A:0FDE
wopeee                           A:107E
zapf                             A:0FD1

Symbols by value:
0000 VDP_SPRITE_PATTERN_TABLE_BASE
0030 VDP_PATTERN_INIT
0031 VDP_PATTERN_INIT_HI
0032 VDP_NAME_POINTER
0034 fc
0040 VDP_WRITE_VRAM_BIT
0080 VDP_REGISTER_BITS
0400 VDP_NAME_TABLE_BASE
040F TEXT_LOC
0700 VDP_SPR_ATT_TABLE_BASE
0800 VDP_PATTERN_TABLE_BASE
0F00 reset
0F16 holding
0F27 col
0F31 vdp_setup
0F4A vdp_copysprites
0F6D vdp_put_spr
0F8B vdp_spr
0FA8 vdp_set_registers
0FC0 vdp_zapram
0FCF nexf
0FD1 zapf
0FDE wait
0FE3 delay
0FEC changecolor
0FFD vdp_initialize_name_table
1012 vdp_name_table_loop
1024 vdp_write_name_table
105B vdp_initialize_pattern_table
1071 vdp_pattern_table_loop
107E wopeee
108D vdp_initialize_color_table
109D vdpclp
10AA vdp_enable_display
10B7 text_vdp
10C0 vdp_register_0
10C0 vdp_register_inits
10C1 vdp_register_1
10C2 vdp_register_2
10C3 vdp_register_3
10C4 vdp_register_4
10C5 vdp_register_5
10C6 vdp_register_6
10C7 vdp_register_7
10C8 vdp_block
10C8 vdp_end_register_inits
10E8 vdp_ball
1200 vdp_pattern
1600 vdp_pattern_end
2000 VDP_COLOR_TABLE_BASE
8800 VDP_VRAM
8801 VDP_REG
